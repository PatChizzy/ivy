Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/ones_like","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/acosh","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/divide","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/negative","functional/backends/jax/array_api/elementwise_functions/sin","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/statistical_functions/min","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/ones_like","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/acosh","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/divide","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/negative","functional/backends/mxnet/array_api/elementwise_functions/sin","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/ones_like","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/acosh","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/divide","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/negative","functional/backends/numpy/array_api/elementwise_functions/sin","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/statistical_functions/min","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/ones_like","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/acosh","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/divide","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/negative","functional/backends/tensorflow/array_api/elementwise_functions/sin","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/statistical_functions/min","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/ones_like","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/acosh","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/divide","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/negative","functional/backends/torch/array_api/elementwise_functions/sin","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/statistical_functions/min","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/ones_like","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/acosh","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/divide","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/negative","functional/ivy/array_api/elementwise_functions/sin","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/statistical_functions/min","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/ones_like.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/acosh.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/divide.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/negative.rst","functional/backends/jax/array_api/elementwise_functions/sin.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/statistical_functions/min.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/ones_like.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/acosh.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/divide.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/negative.rst","functional/backends/mxnet/array_api/elementwise_functions/sin.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/ones_like.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/acosh.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/divide.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/negative.rst","functional/backends/numpy/array_api/elementwise_functions/sin.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/statistical_functions/min.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/ones_like.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/acosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/divide.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/negative.rst","functional/backends/tensorflow/array_api/elementwise_functions/sin.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/statistical_functions/min.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/ones_like.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/acosh.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/divide.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/negative.rst","functional/backends/torch/array_api/elementwise_functions/sin.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/statistical_functions/min.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/ones_like.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/acosh.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/divide.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/negative.rst","functional/ivy/array_api/elementwise_functions/sin.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/statistical_functions/min.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[872,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[404,0,0,"-"],creation_functions:[405,0,0,"-"],data_type_functions:[411,0,0,"-"],data_types:[415,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[406,2,1,""],ones:[407,2,1,""],ones_like:[408,2,1,""],tril:[409,2,1,""],zeros:[410,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[411,1,1,""],finfo:[413,2,1,""],iinfo:[414,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[411,3,1,""],bits:[411,3,1,""],eps:[411,3,1,""],max:[411,3,1,""],min:[411,3,1,""],smallest_normal:[411,3,1,""]},"ivy.functional.backends.numpy.core":{device:[462,0,0,"-"],general:[464,0,0,"-"],gradients:[496,0,0,"-"],image:[501,0,0,"-"],linear_algebra:[505,0,0,"-"],logic:[509,0,0,"-"],math:[510,0,0,"-"],random:[512,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[463,1,1,""],clear_mem_on_dev:[462,2,1,""],dev:[462,2,1,""],dev_from_str:[462,2,1,""],dev_to_str:[462,2,1,""],gpu_is_available:[462,2,1,""],num_gpus:[462,2,1,""],to_dev:[462,2,1,""],tpu_is_available:[462,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[463,3,1,""],start:[463,3,1,""],stop:[463,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[464,2,1,""],arange:[465,2,1,""],argmin:[466,2,1,""],array:[467,2,1,""],asarray:[464,2,1,""],astype:[464,2,1,""],cast:[468,2,1,""],clip:[464,2,1,""],compile:[469,2,1,""],concatenate:[470,2,1,""],constant_pad:[464,2,1,""],container_types:[464,2,1,""],copy_array:[464,2,1,""],cumprod:[471,2,1,""],current_framework_str:[464,2,1,""],dtype:[472,2,1,""],dtype_bits:[473,2,1,""],dtype_from_str:[474,2,1,""],dtype_to_str:[475,2,1,""],floor:[464,2,1,""],floormod:[464,2,1,""],full:[476,2,1,""],gather:[477,2,1,""],gather_nd:[478,2,1,""],get_num_dims:[464,2,1,""],identity:[479,2,1,""],indices_where:[480,2,1,""],inplace_arrays_supported:[464,2,1,""],inplace_decrement:[481,2,1,""],inplace_increment:[482,2,1,""],inplace_update:[483,2,1,""],inplace_variables_supported:[464,2,1,""],is_array:[484,2,1,""],linear_resample:[485,2,1,""],linspace:[486,2,1,""],logspace:[487,2,1,""],matmul:[464,2,1,""],meshgrid:[464,2,1,""],multiprocessing:[464,2,1,""],one_hot:[488,2,1,""],round:[464,2,1,""],scatter_flat:[489,2,1,""],scatter_nd:[490,2,1,""],shape:[464,2,1,""],split:[491,2,1,""],squeeze:[492,2,1,""],to_list:[464,2,1,""],to_numpy:[464,2,1,""],to_scalar:[464,2,1,""],transpose:[493,2,1,""],unstack:[494,2,1,""],where:[464,2,1,""],zero_pad:[464,2,1,""],zeros_like:[495,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[497,2,1,""],is_variable:[498,2,1,""],stop_gradient:[499,2,1,""],variable:[500,2,1,""],variable_data:[496,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[502,2,1,""],gradient_image:[503,2,1,""],stack_images:[504,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[506,2,1,""],qr:[507,2,1,""],vector_to_skew_symmetric_matrix:[508,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[511,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[513,2,1,""],randint:[512,2,1,""],random_normal:[512,2,1,""],random_uniform:[512,2,1,""],seed:[512,2,1,""],shuffle:[512,2,1,""]},"ivy.functional.ivy":{array_api:[873,0,0,"-"],core:[920,0,0,"-"],nn:[1254,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[874,0,0,"-"],creation_functions:[875,0,0,"-"],data_type_functions:[881,0,0,"-"],data_types:[884,0,0,"-"],elementwise_functions:[885,0,0,"-"],function_and_method_signatures:[903,0,0,"-"],linear_algebra:[904,0,0,"-"],manipulation_functions:[908,0,0,"-"],searching_functions:[910,0,0,"-"],set_functions:[912,0,0,"-"],sorting_functions:[913,0,0,"-"],statistical_functions:[915,0,0,"-"],utility_functions:[917,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[874,4,1,""],nan:[874,4,1,""],pi:[874,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[876,2,1,""],ones:[877,2,1,""],ones_like:[878,2,1,""],tril:[879,2,1,""],zeros:[880,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[882,2,1,""],iinfo:[883,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{acosh:[886,2,1,""],asinh:[887,2,1,""],bitwise_and:[888,2,1,""],ceil:[889,2,1,""],cos:[890,2,1,""],cosh:[891,2,1,""],divide:[892,2,1,""],isfinite:[893,2,1,""],isnan:[894,2,1,""],less:[895,2,1,""],less_equal:[896,2,1,""],log1p:[897,2,1,""],log2:[898,2,1,""],logical_not:[899,2,1,""],negative:[900,2,1,""],sin:[901,2,1,""],sqrt:[902,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[905,2,1,""],svd:[906,2,1,""],vector_norm:[907,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[909,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[911,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[914,2,1,""]},"ivy.functional.ivy.array_api.statistical_functions":{min:[916,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[918,2,1,""],any:[919,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[921,0,0,"-"],compilation:[960,0,0,"-"],device:[962,0,0,"-"],dtype:[1012,0,0,"-"],general:[1036,0,0,"-"],gradients:[1131,0,0,"-"],image:[1147,0,0,"-"],linalg:[1154,0,0,"-"],logic:[1161,0,0,"-"],math:[1164,0,0,"-"],meta:[1178,0,0,"-"],multi_node:[1182,0,0,"-"],nest:[1226,0,0,"-"],random:[1238,0,0,"-"],reductions:[1245,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[922,2,1,""],builtin_add:[923,2,1,""],builtin_and:[924,2,1,""],builtin_bool:[925,2,1,""],builtin_contains:[926,2,1,""],builtin_deepcopy:[927,2,1,""],builtin_dir:[928,2,1,""],builtin_eq:[929,2,1,""],builtin_float:[930,2,1,""],builtin_floordiv:[931,2,1,""],builtin_ge:[932,2,1,""],builtin_getattr:[933,2,1,""],builtin_getattribute:[934,2,1,""],builtin_getitem:[935,2,1,""],builtin_gt:[936,2,1,""],builtin_int:[937,2,1,""],builtin_invert:[938,2,1,""],builtin_le:[939,2,1,""],builtin_lt:[940,2,1,""],builtin_mul:[941,2,1,""],builtin_ne:[942,2,1,""],builtin_neg:[943,2,1,""],builtin_or:[944,2,1,""],builtin_pos:[945,2,1,""],builtin_pow:[946,2,1,""],builtin_radd:[947,2,1,""],builtin_rand:[948,2,1,""],builtin_rfloordiv:[949,2,1,""],builtin_rmul:[950,2,1,""],builtin_ror:[951,2,1,""],builtin_rpow:[952,2,1,""],builtin_rsub:[953,2,1,""],builtin_rtruediv:[954,2,1,""],builtin_rxor:[955,2,1,""],builtin_setitem:[956,2,1,""],builtin_sub:[957,2,1,""],builtin_truediv:[958,2,1,""],builtin_xor:[959,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[961,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[962,1,1,""],DevClonedItem:[964,1,1,""],DevClonedIter:[965,1,1,""],DevClonedNest:[966,1,1,""],DevDistItem:[967,1,1,""],DevDistIter:[968,1,1,""],DevDistNest:[969,1,1,""],DevManager:[962,1,1,""],DevMapper:[971,1,1,""],DevMapperMultiProc:[972,1,1,""],MultiDev:[962,1,1,""],MultiDevItem:[974,1,1,""],MultiDevIter:[975,1,1,""],MultiDevNest:[976,1,1,""],Profiler:[977,1,1,""],clear_mem_on_dev:[978,2,1,""],default_device:[979,2,1,""],dev:[980,2,1,""],dev_clone:[981,2,1,""],dev_clone_array:[982,2,1,""],dev_clone_iter:[983,2,1,""],dev_clone_nest:[984,2,1,""],dev_dist:[985,2,1,""],dev_dist_array:[986,2,1,""],dev_dist_iter:[987,2,1,""],dev_dist_nest:[988,2,1,""],dev_from_str:[989,2,1,""],dev_to_str:[990,2,1,""],dev_unify:[991,2,1,""],dev_unify_array:[992,2,1,""],dev_unify_iter:[993,2,1,""],dev_unify_nest:[994,2,1,""],dev_util:[995,2,1,""],get_all_arrays_on_dev:[996,2,1,""],gpu_is_available:[997,2,1,""],num_arrays_on_dev:[998,2,1,""],num_cpu_cores:[999,2,1,""],num_gpus:[1000,2,1,""],percent_used_mem_on_dev:[1001,2,1,""],print_all_arrays_on_dev:[1002,2,1,""],set_default_device:[1003,2,1,""],set_split_factor:[1004,2,1,""],split_factor:[1005,2,1,""],split_func_call:[1006,2,1,""],to_dev:[1007,2,1,""],total_mem_on_dev:[1008,2,1,""],tpu_is_available:[1009,2,1,""],unset_default_device:[1010,2,1,""],used_mem_on_dev:[1011,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[962,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[962,3,1,""],da_tune_step:[962,3,1,""],dim_size:[962,3,1,""],ds_tune_step:[962,3,1,""],map:[962,3,1,""],repeated_config_check:[962,3,1,""],tune_step:[962,3,1,""],tuned:[962,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[971,3,1,""],map:[971,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[972,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[962,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[974,3,1,""],items:[974,3,1,""],keys:[974,3,1,""],shape:[974,3,1,""],values:[974,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[975,3,1,""],at_dev:[975,3,1,""],at_devs:[975,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[976,3,1,""],at_dev:[976,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[977,3,1,""],start:[977,3,1,""],stop:[977,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[1012,1,1,""],DefaultFloatDtype:[1012,1,1,""],DefaultIntDtype:[1012,1,1,""],astype:[1012,2,1,""],cast:[1016,2,1,""],closest_valid_dtype:[1017,2,1,""],convert_dtype:[1018,2,1,""],default_dtype:[1019,2,1,""],default_float_dtype:[1020,2,1,""],default_int_dtype:[1021,2,1,""],dtype:[1022,2,1,""],dtype_bits:[1023,2,1,""],dtype_from_str:[1024,2,1,""],dtype_to_str:[1025,2,1,""],invalid_dtype:[1026,2,1,""],is_float_dtype:[1027,2,1,""],is_int_dtype:[1028,2,1,""],set_default_dtype:[1029,2,1,""],set_default_float_dtype:[1030,2,1,""],set_default_int_dtype:[1031,2,1,""],unset_default_dtype:[1032,2,1,""],unset_default_float_dtype:[1033,2,1,""],unset_default_int_dtype:[1034,2,1,""],valid_dtype:[1035,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[1012,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[1012,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[1012,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1059,2,1,""],abs:[1037,2,1,""],all_equal:[1038,2,1,""],arange:[1039,2,1,""],arg_names:[1040,2,1,""],argmin:[1041,2,1,""],array:[1042,2,1,""],array_equal:[1043,2,1,""],arrays_equal:[1044,2,1,""],asarray:[1036,2,1,""],assert_supports_inplace:[1045,2,1,""],broadcast_to:[1046,2,1,""],cache_fn:[1047,2,1,""],clip:[1048,2,1,""],clip_matrix_norm:[1049,2,1,""],clip_vector_norm:[1050,2,1,""],concatenate:[1051,2,1,""],constant_pad:[1052,2,1,""],container_types:[1053,2,1,""],copy_array:[1054,2,1,""],cross:[1055,2,1,""],cumprod:[1056,2,1,""],cumsum:[1057,2,1,""],current_framework_str:[1058,2,1,""],einops_rearrange:[1060,2,1,""],einops_reduce:[1061,2,1,""],einops_repeat:[1062,2,1,""],equal:[1063,2,1,""],exists:[1064,2,1,""],expand_dims:[1065,2,1,""],floor:[1066,2,1,""],floormod:[1067,2,1,""],fourier_encode:[1068,2,1,""],full:[1069,2,1,""],gather:[1070,2,1,""],gather_nd:[1071,2,1,""],get_all_arrays_in_memory:[1072,2,1,""],get_min_base:[1073,2,1,""],get_min_denominator:[1074,2,1,""],get_num_dims:[1075,2,1,""],get_referrers_recursive:[1076,2,1,""],has_nans:[1077,2,1,""],identity:[1078,2,1,""],indices_where:[1079,2,1,""],inplace_arrays_supported:[1080,2,1,""],inplace_decrement:[1081,2,1,""],inplace_increment:[1082,2,1,""],inplace_update:[1083,2,1,""],inplace_variables_supported:[1084,2,1,""],is_array:[1085,2,1,""],isinf:[1086,2,1,""],linear_resample:[1087,2,1,""],linspace:[1088,2,1,""],logspace:[1089,2,1,""],match_kwargs:[1090,2,1,""],matmul:[1091,2,1,""],maximum:[1092,2,1,""],meshgrid:[1093,2,1,""],minimum:[1094,2,1,""],multiprocessing:[1095,2,1,""],num_arrays_in_memory:[1096,2,1,""],one_hot:[1097,2,1,""],ones:[1098,2,1,""],print_all_arrays_in_memory:[1099,2,1,""],queue_timeout:[1100,2,1,""],repeat:[1101,2,1,""],reshape:[1102,2,1,""],round:[1103,2,1,""],scatter_flat:[1104,2,1,""],scatter_nd:[1105,2,1,""],set_min_base:[1106,2,1,""],set_min_denominator:[1107,2,1,""],set_queue_timeout:[1108,2,1,""],set_tmp_dir:[1109,2,1,""],shape:[1110,2,1,""],shape_to_tuple:[1111,2,1,""],split:[1112,2,1,""],squeeze:[1113,2,1,""],stable_divide:[1114,2,1,""],stable_pow:[1115,2,1,""],stack:[1116,2,1,""],supports_inplace:[1117,2,1,""],swapaxes:[1118,2,1,""],tile:[1119,2,1,""],tmp_dir:[1120,2,1,""],to_list:[1121,2,1,""],to_numpy:[1122,2,1,""],to_scalar:[1123,2,1,""],transpose:[1124,2,1,""],try_else_none:[1125,2,1,""],unstack:[1126,2,1,""],value_is_nan:[1127,2,1,""],where:[1128,2,1,""],zero_pad:[1129,2,1,""],zeros_like:[1130,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1131,1,1,""],adam_step:[1133,2,1,""],adam_update:[1134,2,1,""],execute_with_gradients:[1135,2,1,""],gradient_descent_update:[1136,2,1,""],is_variable:[1137,2,1,""],lamb_update:[1138,2,1,""],lars_update:[1139,2,1,""],optimizer_update:[1140,2,1,""],set_with_grads:[1141,2,1,""],stop_gradient:[1142,2,1,""],unset_with_grads:[1143,2,1,""],variable:[1144,2,1,""],variable_data:[1145,2,1,""],with_grads:[1146,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1131,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1148,2,1,""],float_img_to_uint8_img:[1149,2,1,""],gradient_image:[1150,2,1,""],random_crop:[1151,2,1,""],stack_images:[1152,2,1,""],uint8_img_to_float_img:[1153,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1155,2,1,""],inv:[1156,2,1,""],matrix_norm:[1157,2,1,""],pinv:[1158,2,1,""],qr:[1159,2,1,""],vector_to_skew_symmetric_matrix:[1160,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1162,2,1,""],logical_or:[1163,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1165,2,1,""],asin:[1166,2,1,""],atan2:[1168,2,1,""],atan:[1167,2,1,""],atanh:[1169,2,1,""],cosh:[1170,2,1,""],divide:[1171,2,1,""],erf:[1172,2,1,""],exp:[1173,2,1,""],log:[1174,2,1,""],sinh:[1175,2,1,""],tan:[1176,2,1,""],tanh:[1177,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1179,2,1,""],maml_step:[1180,2,1,""],reptile_step:[1181,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1182,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1227,2,1,""],copy_nest:[1228,2,1,""],index_nest:[1229,2,1,""],map:[1230,2,1,""],map_nest_at_index:[1231,2,1,""],map_nest_at_indices:[1232,2,1,""],multi_index_nest:[1233,2,1,""],nested_indices_where:[1234,2,1,""],nested_map:[1235,2,1,""],set_nest_at_index:[1236,2,1,""],set_nest_at_indices:[1237,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1239,2,1,""],randint:[1240,2,1,""],random_normal:[1241,2,1,""],random_uniform:[1242,2,1,""],seed:[1243,2,1,""],shuffle:[1244,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1246,2,1,""],reduce_max:[1247,2,1,""],reduce_mean:[1248,2,1,""],reduce_min:[1249,2,1,""],reduce_prod:[1250,2,1,""],reduce_std:[1251,2,1,""],reduce_sum:[1252,2,1,""],reduce_var:[1253,2,1,""]},"ivy.functional.ivy.nn":{activations:[1255,0,0,"-"],layers:[1263,0,0,"-"],losses:[1276,0,0,"-"],norms:[1280,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1256,2,1,""],leaky_relu:[1257,2,1,""],relu:[1258,2,1,""],sigmoid:[1259,2,1,""],softmax:[1260,2,1,""],softplus:[1261,2,1,""],tanh:[1262,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1264,2,1,""],conv1d_transpose:[1265,2,1,""],conv2d:[1266,2,1,""],conv2d_transpose:[1267,2,1,""],conv3d:[1268,2,1,""],conv3d_transpose:[1269,2,1,""],depthwise_conv2d:[1270,2,1,""],dropout:[1271,2,1,""],linear:[1272,2,1,""],lstm_update:[1273,2,1,""],multi_head_attention:[1274,2,1,""],scaled_dot_product_attention:[1275,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1277,2,1,""],cross_entropy:[1278,2,1,""],sparse_cross_entropy:[1279,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1281,2,1,""]},"ivy.stateful":{activations:[1285,0,0,"-"],converters:[1288,0,0,"-"],initializers:[1290,0,0,"-"],layers:[1299,0,0,"-"],module:[1311,0,0,"-"],norms:[1313,0,0,"-"],optimizers:[1315,0,0,"-"],sequential:[1321,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1286,1,1,""],GELU:[1287,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1286,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1287,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1289,2,1,""]},"ivy.stateful.initializers":{Constant:[1290,1,1,""],FirstLayerSiren:[1292,1,1,""],GlorotUniform:[1293,1,1,""],KaimingNormal:[1290,1,1,""],Ones:[1295,1,1,""],Siren:[1296,1,1,""],Uniform:[1290,1,1,""],Zeros:[1298,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1290,3,1,""],create_variables:[1290,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1292,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1293,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1290,3,1,""],create_variables:[1290,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1295,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1296,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1290,3,1,""],create_variables:[1290,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1298,3,1,""]},"ivy.stateful.layers":{Conv1D:[1300,1,1,""],Conv1DTranspose:[1301,1,1,""],Conv2D:[1302,1,1,""],Conv2DTranspose:[1303,1,1,""],Conv3D:[1304,1,1,""],Conv3DTranspose:[1305,1,1,""],DepthwiseConv2D:[1306,1,1,""],Dropout:[1307,1,1,""],LSTM:[1308,1,1,""],Linear:[1309,1,1,""],MultiHeadAttention:[1310,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1300,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1301,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1302,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1303,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1304,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1305,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1306,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1307,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1308,3,1,""],get_initial_state:[1308,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1309,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1310,3,1,""]},"ivy.stateful.module":{Module:[1312,1,1,""]},"ivy.stateful.module.Module":{__init__:[1312,3,1,""],build:[1312,3,1,""],build_mode:[1312,3,1,""],built:[1312,3,1,""],check_submod_rets:[1312,3,1,""],get_mod_key:[1312,3,1,""],mod_depth:[1312,3,1,""],mod_height:[1312,3,1,""],mod_with_top_mod_key_chain:[1312,3,1,""],save_weights:[1312,3,1,""],show_mod_in_top_mod:[1312,3,1,""],show_structure:[1312,3,1,""],show_v_in_top_v:[1312,3,1,""],sub_mods:[1312,3,1,""],track_submod_call_order:[1312,3,1,""],track_submod_rets:[1312,3,1,""],v_with_top_v_key_chains:[1312,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1314,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1314,3,1,""]},"ivy.stateful.optimizers":{Adam:[1316,1,1,""],LAMB:[1317,1,1,""],LARS:[1318,1,1,""],Optimizer:[1319,1,1,""],SGD:[1320,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1316,3,1,""],set_state:[1316,3,1,""],state:[1316,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1317,3,1,""],set_state:[1317,3,1,""],state:[1317,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1318,3,1,""],set_state:[1318,3,1,""],state:[1318,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1319,3,1,""],set_state:[1319,3,1,""],step:[1319,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1320,3,1,""],set_state:[1320,3,1,""],state:[1320,3,1,""]},"ivy.stateful.sequential":{Sequential:[1322,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1322,3,1,""]},"ivy.verbosity":{cprint:[1327,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1326,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1315,1316,1317],"02886":1282,"100":[1182,1282,1324],"141592653589793":874,"2019":[885,892],"2021":1282,"2102":1282,"360":[1164,1176],"718281828459045":874,"754":[874,881,882,885,892,902],"999":[1131,1133,1134,1138,1315,1316,1317],"abstract":[962,977,1282,1315,1319],"boolean":[40,41,885,888,899,921,939,962,997,1009,1012,1026,1035,1036,1038,1043,1044,1077,1079,1080,1084,1085,1086,1117,1127,1131,1137,1161,1162,1163,1178,1179,1180,1182],"break":43,"case":[15,18,19,40,41,42,43,885,886,887,889,890,891,892,898,901,902,962,1001,1008,1011,1036,1039,1102,1104,1105,1154,1157,1159,1182,1226,1229,1233,1282,1299,1310,1311,1312,1315,1319,1328],"catch":[1036,1059],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,411,462,463,881,883,962,964,965,966,967,968,969,971,972,974,975,976,977,989,990,1012,1036,1040,1090,1131,1145,1182,1226,1228,1235,1276,1278,1279,1282,1285,1286,1287,1288,1289,1290,1292,1293,1295,1296,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1324,1328],"default":[15,18,19,40,41,42,43,875,876,877,878,879,880,904,905,907,908,909,910,911,913,914,915,916,917,918,919,960,961,962,971,972,979,980,984,985,986,987,988,991,992,993,994,1001,1004,1005,1006,1011,1012,1019,1020,1021,1022,1036,1038,1039,1041,1049,1050,1051,1052,1055,1056,1057,1068,1069,1070,1075,1077,1078,1087,1089,1090,1093,1095,1098,1100,1101,1104,1105,1108,1110,1112,1114,1115,1124,1126,1127,1131,1134,1136,1137,1138,1139,1140,1142,1146,1154,1157,1159,1178,1179,1180,1181,1182,1226,1227,1228,1230,1234,1235,1238,1239,1241,1242,1245,1247,1248,1249,1250,1251,1252,1253,1255,1256,1260,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1274,1275,1276,1277,1278,1279,1280,1281,1288,1289,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322],"final":[40,41,43,1036,1068,1088,1089,1182,1299,1310,1325],"float":[40,41,42,43,874,875,876,877,880,881,882,885,886,887,889,890,891,892,898,901,902,904,907,921,939,940,946,962,971,972,995,1001,1004,1008,1011,1012,1020,1027,1036,1039,1049,1050,1052,1068,1069,1073,1074,1089,1106,1107,1108,1114,1115,1131,1133,1134,1136,1138,1139,1140,1147,1149,1153,1164,1171,1178,1179,1180,1181,1182,1238,1241,1242,1255,1257,1263,1271,1274,1275,1276,1277,1278,1279,1280,1281,1299,1307,1310,1313,1314,1315,1316,1317,1318,1319,1320],"function":[15,40,41,43,406,407,408,409,410,413,414,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,874,876,877,878,879,880,882,883,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,904,905,906,907,909,911,914,916,918,919,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,964,965,966,967,968,969,971,972,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1285,1286,1287,1315,1318,1319,1320,1324,1325,1328],"import":[43,1282,1325,1328],"int":[40,41,42,43,405,406,407,409,410,512,875,876,877,879,880,881,882,883,904,905,907,908,909,910,911,913,914,915,916,917,918,919,921,939,940,946,960,961,962,984,985,986,987,988,991,992,993,994,999,1000,1006,1012,1021,1023,1028,1036,1041,1046,1051,1052,1056,1057,1060,1061,1062,1065,1068,1069,1070,1075,1078,1087,1088,1089,1097,1098,1101,1102,1104,1105,1110,1111,1112,1113,1116,1118,1119,1124,1126,1129,1131,1133,1134,1138,1147,1151,1152,1154,1157,1178,1179,1180,1181,1182,1226,1235,1238,1239,1240,1242,1243,1245,1247,1248,1249,1250,1251,1252,1253,1255,1260,1263,1264,1265,1266,1267,1268,1269,1270,1274,1276,1278,1279,1280,1281,1299,1300,1301,1302,1303,1304,1305,1306,1308,1309,1310,1313,1314],"long":[43,1263,1273],"new":[40,41,43,512,875,876,877,878,880,885,897,1012,1016,1036,1037,1046,1060,1061,1062,1065,1068,1069,1070,1071,1098,1102,1104,1105,1106,1107,1114,1115,1116,1131,1134,1136,1138,1139,1140,1147,1149,1151,1153,1164,1169,1170,1175,1177,1182,1226,1236,1237,1238,1239,1280,1281,1282,1288,1289,1299,1309,1313,1314,1315,1316,1317,1318,1319,1320,1325,1328],"public":[1036,1053],"return":[15,16,17,18,19,40,41,42,43,512,875,876,877,878,879,880,885,886,887,888,889,890,891,892,893,894,895,896,898,899,900,901,902,904,905,906,907,910,911,913,914,915,916,917,918,919,921,939,940,946,960,961,962,971,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,997,998,1000,1001,1005,1006,1007,1008,1009,1011,1012,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1035,1036,1037,1038,1039,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1075,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1101,1102,1103,1104,1105,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1133,1134,1135,1136,1137,1138,1139,1140,1142,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1226,1227,1228,1230,1234,1235,1238,1239,1240,1241,1242,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1288,1289,1299,1308,1309,1315,1319,1324,1325,1328],"short":[43,1263,1273,1282,1328],"static":[40,41,960,961],"super":1182,"true":[40,41,42,464,469,496,499,512,513,885,893,894,899,904,906,907,910,911,913,914,917,918,919,960,961,962,1036,1038,1045,1047,1064,1068,1077,1079,1127,1128,1131,1134,1136,1137,1138,1139,1140,1142,1154,1157,1178,1179,1180,1181,1182,1226,1227,1234,1238,1239,1245,1247,1248,1249,1250,1251,1252,1253,1255,1256,1263,1271,1276,1277,1278,1279,1299,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320],"try":[40,41,1036,1125,1182],"var":[40,41,1178,1179,1180,1328],"while":[40,41,42,885,899,1182],AND:[885,888,917,918,1161,1162],But:1328,For:[43,885,886,887,889,890,891,892,898,901,902,1036,1039,1048,1116,1131,1137,1145,1154,1159,1164,1165,1282,1288,1289,1325,1328],Its:[1164,1167],NOT:[885,899],Not:874,One:[40,41,43,1036,1061,1102,1238,1240,1328],Ones:[1282,1290],PRs:43,Such:[1036,1053],That:1325,The:[15,16,17,18,19,40,41,42,43,875,879,885,886,887,888,889,890,891,892,893,894,895,896,898,899,901,902,904,905,906,907,908,909,913,914,917,918,919,921,939,940,946,960,961,962,971,972,978,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,1001,1004,1005,1006,1007,1008,1011,1012,1016,1017,1018,1023,1024,1025,1026,1035,1036,1039,1042,1043,1046,1047,1049,1050,1051,1052,1054,1055,1058,1059,1063,1068,1070,1071,1078,1081,1082,1083,1085,1087,1089,1091,1093,1095,1098,1101,1102,1104,1105,1106,1107,1108,1111,1112,1113,1114,1115,1116,1119,1127,1130,1131,1133,1134,1136,1138,1139,1140,1142,1145,1147,1149,1151,1153,1154,1157,1159,1164,1165,1166,1167,1171,1172,1173,1174,1176,1178,1179,1180,1181,1182,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1241,1242,1245,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1274,1275,1276,1277,1278,1279,1280,1281,1282,1288,1289,1299,1300,1301,1302,1303,1304,1305,1306,1307,1309,1310,1311,1312,1313,1314,1315,1317,1318,1319,1325,1328],There:[43,1282,1325],These:[43,1282],Use:43,Used:[1226,1227,1234,1311,1312],Using:[1282,1283,1328],With:[40,41,910,911,1154,1157,1245,1247,1248,1249,1250,1251,1252,1253,1282,1324,1328],__array__:[1036,1042],__call__:[1299,1310,1311,1312],__del__:1182,__dict__:[1182,1325],__enter__:1182,__exit__:1182,__getitem__:1182,__getstate__:1182,__init__:[40,41,42,43,59,60,84,224,411,412,462,463,544,681,962,963,970,971,972,973,974,975,976,977,1012,1013,1014,1015,1131,1132,1182,1186,1193,1282,1285,1286,1287,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1324,1328],__iter__:1182,__len__:1182,__next__:1182,__pow__:43,__repr__:1182,_assign_vari:1324,_axi:1182,_base:[1226,1227,1234],_compute_node_da_ratio:1182,_compute_node_strs_da:1182,_concat_unify_arrai:1182,_counter:1182,_cur_framework:[43,1182],_da_direct:1182,_da_directions_flip:1182,_da_step_tim:1182,_da_tim:1182,_da_tune_count:1182,_data:1182,_delta_da_dim_s:1182,_delta_sf:1182,_dict:1182,_dim_siz:1182,_first_da_tune_step:1182,_first_ns_tune_step:1182,_fn:1182,_forward:[1282,1324],_get_kalman_param:1328,_get_prior:1328,_get_some_model:1328,_handle_flat_arrays_in_out:43,_index:[1226,1227,1234],_input_queu:1182,_length:1182,_max_depth:1182,_max_node_dim_step_ratio:1182,_max_node_dim_step_s:1182,_max_split_factor_step_s:1182,_mean_unify_arrai:1182,_min_bas:[1036,1115,1280,1281,1313,1314],_min_denomin:[1036,1114],_min_node_dim_s:1182,_min_sf_tune_step:1182,_min_unit_node_tune_step:1182,_model:1328,_native_wrapp:43,_node_mapp:1182,_node_percent_mem:1182,_node_str:1182,_node_str_da_ratio:1182,_node_strs_da:1182,_node_strs_kei:1182,_node_strs_n:1182,_node_util:1182,_ns_step_tim:1182,_ns_time:1182,_ns_tune_count:1182,_num_nod:1182,_num_work:1182,_observed_config:1182,_output_queu:1182,_paramet:1324,_percent_mem_inc_per_sf:1182,_percent_mem_inc_per_unit_da_dim:1182,_percent_util_inc_per_unit_da_dim:1182,_ret_fn:1182,_safety_factor:1182,_save_dir:1182,_shift_da_split:1182,_shift_n:1182,_slice:1182,_step:[1315,1319],_sum_unify_arrai:1182,_timeout:1182,_tune:1182,_tune_da:1182,_tune_n:1182,_tune_step:1182,_unit_da_tune_count:1182,_unroll_step:1328,_with_node_mappig:1182,_worker:1182,_worker_class:1182,_worker_fn:1182,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,962,971,977,1182,1311,1312,1315,1319],abil:1282,abl:[40,41],about:[881,882,883],abov:[43,875,879,904,905,1238,1240],above_height:[40,41],abs:[311,464,602,740,904,907,1036,1182],absolut:[40,41,1036,1037],abstractmethod:1182,accept:[15,43,885,899,1282],access:[40,41,43,1325],accord:[40,41,881,882,885,892,1036,1052,1070,1104,1105,1124,1129],accordingli:[904,907,917,918,919],accur:[59,411,462,463,962,974,975,976,977,1012,1131,1290,1292,1293,1295,1296,1298],aco:[824,1164],acosh:[88,228,416,548,685,885],across:[40,41,962,971,972,981,982,984,985,986,987,988,994,1004,1005,1036,1041,1043,1044,1182,1226,1230],act:43,activ:[1256,1257,1258,1259,1260,1261,1262,1282,1286,1287],actual:1325,adam:[1131,1133,1134,1138,1282,1315,1317,1324],adam_step:1131,adam_upd:1131,adapt:[1131,1139,1315,1318],add:[40,41,43,1182,1276,1277,1278,1279,1280,1281,1282,1313,1314,1325],added:[43,1036,1114,1115,1321,1322],adding:[43,1036,1046],addit:[40,41,43,1036,1060,1061,1062,1280,1281,1299,1309],addition:43,address:43,adher:43,adjac:[1036,1039],adopt:[43,1036,1053],affect:[1036,1039],affin:[1313,1314],after:[885,902,1036,1087,1131,1134,1135,1136,1138,1139,1140,1147,1148,1280,1281,1315,1316,1317,1318,1319,1320,1328],after_1:[1036,1052,1129],after_n:[1036,1052,1129],again:43,against:[40,41,910,911,1154,1157,1245,1247,1248,1249,1250,1251,1252,1253],agnost:[43,1282,1324,1325],aim:1328,algebra:1154,algorithm:[1263,1264,1265,1266,1267,1268,1269,1270,1299,1300,1301,1302,1303,1304,1305,1306,1328],align:[40,41,43,1036,1046],aliv:[962,996,998,1002,1036,1072,1096,1099],all:[15,16,17,18,19,40,41,43,121,253,449,581,718,875,879,904,907,908,909,917,960,961,962,971,996,1002,1036,1037,1038,1043,1044,1053,1072,1078,1099,1113,1154,1159,1178,1179,1180,1181,1182,1226,1227,1228,1234,1235,1238,1239,1242,1245,1247,1248,1249,1250,1251,1252,1253,1263,1273,1282,1325,1328],all_depth:[40,41],all_equ:1036,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1226,all_tru:[40,41],alloc:[43,875,879,962,1182],allow:[1036,1088,1089,1090,1311,1312],allow_dupl:[1036,1090],alon:[962,1001,1011,1182,1282],along:[40,41,43,512,904,907,908,909,910,911,913,914,915,916,917,918,919,962,985,986,987,988,991,992,993,994,1006,1036,1051,1056,1057,1070,1087,1088,1089,1101,1112,1116,1119,1126,1154,1157,1178,1179,1180,1181,1182,1238,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253],alongsid:[1324,1325],alpha:[1255,1257],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,885,889,962,1182],also:[40,41,43,1036,1039,1131,1134,1178,1179,1180,1181,1226,1227,1228,1234,1235,1263,1272,1282,1299,1309,1324],altern:1324,alwai:[40,41,43,1131,1137,1142],among:[40,41],amount:[962,1008,1182,1282],angl:[885,891,1164,1165,1168],ani:[15,16,17,18,19,40,41,43,121,253,449,581,718,885,896,917,960,961,962,964,967,971,972,974,983,984,987,988,993,1036,1038,1039,1042,1059,1060,1061,1062,1063,1064,1077,1085,1090,1114,1115,1131,1135,1182,1226,1227,1230,1234,1235,1236,1237,1238,1242,1282,1288,1289,1311,1312,1324,1325,1328],anoth:[40,41,43,1012,1018,1282],another_backend:43,anyth:[43,1328],anywai:43,apart:43,api:[1282,1283],appear:[43,1036,1065],append:[40,41,904,905,1182],appli:[15,18,19,40,41,904,906,1036,1060,1061,1062,1131,1138,1139,1161,1162,1163,1178,1179,1180,1226,1230,1233,1235,1255,1256,1257,1258,1259,1260,1261,1262,1263,1272,1274,1275,1280,1281,1282,1285,1286,1287,1313,1314],applic:[1226,1230,1235,1263,1274,1275,1282,1328],appropri:[885,892,910,911],approxim:[43,885,886,887,890,891,897,898,901,921,946,1255,1256],arang:[141,311,464,512,602,740,1036,1088,1089],arbitrari:[40,41,962,991,992,994,1182],arc:[1164,1168],arcco:[1164,1165],arctan:[1164,1167],area:[885,886,887,1282],arg:[15,16,17,40,41,43,59,63,962,971,984,988,994,1006,1036,1060,1061,1062,1105,1182,1288,1289,1311,1312],arg_nam:1036,arg_stateful_idx:[1311,1312],argmax:[114,247,442,574,711,910],argmin:[141,464,602,740,1036],args_clon:1182,args_dist:1182,args_to_ivi:[15,1282],args_to_n:[15,1282],args_uni:1182,argsort:[117,250,445,577,714,913],argument:[15,16,17,18,19,40,41,42,43,59,63,960,961,962,971,972,984,988,994,1036,1039,1040,1047,1059,1090,1105,1164,1165,1182,1226,1230,1288,1289,1311,1312],aris:[1282,1328],arithmet:[43,1245,1248,1251,1253],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:512,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,141,311,464,512,602,740,875,876,877,878,879,880,881,882,883,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,904,905,906,907,908,909,910,911,913,914,915,916,917,918,919,939,940,946,962,980,981,982,985,986,987,988,991,992,993,994,996,998,1002,1006,1007,1012,1016,1022,1027,1028,1036,1037,1038,1039,1041,1043,1044,1045,1046,1048,1049,1050,1051,1052,1054,1055,1056,1057,1060,1061,1062,1063,1065,1066,1067,1068,1069,1070,1071,1072,1075,1077,1078,1079,1080,1081,1082,1083,1085,1086,1087,1088,1089,1091,1092,1093,1094,1096,1097,1098,1099,1101,1102,1103,1104,1105,1110,1112,1113,1116,1117,1118,1119,1121,1122,1123,1124,1126,1127,1128,1129,1130,1131,1133,1134,1137,1138,1142,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1182,1226,1228,1235,1238,1239,1240,1241,1242,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1299,1307,1308,1310,1315,1319,1324,1325],arrang:[1036,1060],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,405,406,407,408,409,410,411,413,414,874,875,876,877,878,879,880,881,882,883,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,904,905,906,907,908,909,910,911,913,914,915,916,917,918,919],array_api_methods_to_test:43,array_builtin:[43,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959],array_equ:[311,740,1036],array_lik:[512,1036,1042],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,1036],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1282],arraywithgener:[22,1282],arraywithgradi:[24,1282],arraywithimag:[26,1282],arraywithlinalg:[28,1282],arraywithlog:[30,1282],arraywithmath:[32,1282],arraywithmeta:[34,1282],arraywithrandom:[36,1282],arraywithreduct:[38,1282],arriv:[40,41,42],articl:1282,arxiv:1282,as_arrai:[40,41,1036,1075,1110],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[462,464,472,962,980,1012,1019,1020,1021,1022],as_tensor:464,as_vari:[40,41],as_zero:[40,41],asarrai:[464,1036],ascend:[913,914],asin:[824,1164],asinh:[88,416,548,685,885],aspect:[1147,1152],assert:[40,41,1036,1045,1182],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:1036,associ:[43,1154,1160],assum:[885,890,901,1325,1328],astyp:[464,1012],asynchron:[40,41,42],at_dev:[40,42,962,975,976],at_kei:[40,41],at_key_chain:[40,41],at_nod:1182,atan2:[824,1164],atan:[824,1164],atanh:[824,1164],attent:[43,1263,1274,1275,1299,1310],attribut:[0,6,40,41,881,882,883,1036,1130],audienc:[1282,1325],author:1282,automat:43,avail:[40,41,43,962,997,999,1000,1009,1036,1061,1182],averag:[1131,1133,1134,1138,1178,1179,1180,1245,1248],average_across_step:[1178,1179,1180],avoid:[43,962,1182,1325],axes:[40,41,43,464,493,505,506,904,907,908,909,910,911,915,916,917,918,919,962,1006,1036,1041,1052,1065,1118,1124,1129,1154,1157,1182,1245,1247,1248,1249,1250,1251,1252,1253],axes_length:[40,41,1036,1060,1061,1062],axi:[40,41,464,466,470,471,477,485,486,487,491,492,494,904,905,907,908,909,910,911,913,914,915,916,917,918,919,962,964,967,974,985,986,987,988,991,992,993,994,1006,1036,1041,1051,1052,1055,1056,1057,1065,1070,1087,1088,1089,1101,1112,1113,1116,1118,1119,1126,1129,1182,1238,1244,1245,1247,1248,1249,1250,1251,1252,1253,1255,1260,1276,1278,1279],axis0:[40,41,1036,1118],axis1:[40,41,904,905,1036,1118],axis2:[904,905],back:[43,1311,1312,1315,1319],backend:[15,17,19,40,41,405,406,407,408,409,410,411,413,414,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,510,511,512,513,962,997,1000,1009,1012,1018,1026,1035,1036,1080,1084,1131,1134,1136,1138,1139,1140,1145,1182,1282,1283,1288,1289,1315,1316,1317,1318,1319,1320,1324,1325,1328],backend_nam:43,background:[1282,1325],backprop:1328,backward:[917,918,919,1324],band:[1036,1068],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,411,462,463,464,487,885,897,898,921,946,962,964,965,966,967,968,969,971,972,974,975,976,977,1012,1036,1073,1089,1106,1115,1131,1182,1245,1246,1282,1285,1286,1287,1290,1292,1293,1295,1296,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1328],basi:43,batch:[40,41,904,906,907,962,1004,1005,1036,1068,1078,1147,1151,1178,1179,1180,1181,1182,1263,1272,1280,1281,1313,1314],batch_shap:[464,479,1036,1078,1097,1147,1148,1149,1150,1151,1152,1153,1154,1160,1238,1239,1263,1273,1274,1275,1299,1308],batch_siz:[512,513,1182,1238,1239,1263,1264,1265,1266,1267,1268,1269,1270],bayesian:1328,becaus:[43,1036,1039],becom:[43,1036,1048,1164,1168,1328],been:[1036,1060,1061,1062,1238,1239],befor:[40,41,43,962,1006,1178,1179,1180,1182,1226,1235,1245,1247,1248,1249,1250,1251,1252,1253,1263,1274,1275,1328],before_1:[1036,1052,1129],before_n:[1036,1052,1129],begin:[1226,1227,1234,1325],behaviour:[43,1328],behind:[1131,1134,1136,1138,1139,1140,1282],being:[40,41,43,1036,1039,1100,1108,1182],believ:43,belong:[40,41],below:[43,875,879,904,905,1282,1325,1328],below_depth:[40,41],benefit:1282,bernoul:[1263,1271,1299,1307],best:[43,1036,1090,1282],beta1:[1131,1133,1134,1138,1315,1316,1317],beta2:[1131,1133,1134,1138,1315,1316,1317],beta:[1280,1281],between:[40,41,42,881,882,1036,1039,1154,1159,1226,1230,1238,1240,1276,1278,1279,1315,1317],bia:[1263,1272,1273,1299,1300,1301,1302,1303,1304,1305,1306,1309],bias_initi:[1299,1300,1301,1302,1303,1304,1305,1306,1309],bilinear:[1147,1148],bilinear_resampl:[175,364,501,642,810,1147],bilinearli:[1147,1148],binari:[885,888,1276,1277],binary_cross_entropi:1276,bit:[411,881,882,883,1012,1023,1147,1149,1153,1282],bitwis:[885,888],bitwise_and:[88,228,416,548,685,885],bitwise_oper:[0,7,8],block:[1282,1325],bool:[15,18,19,40,41,42,43,885,893,894,895,896,899,904,906,907,910,911,913,914,915,916,917,918,919,921,940,960,961,962,980,993,997,1001,1006,1009,1011,1012,1022,1036,1038,1043,1044,1056,1059,1063,1064,1068,1075,1077,1085,1090,1110,1112,1126,1127,1128,1131,1134,1135,1136,1137,1138,1139,1140,1142,1154,1157,1178,1179,1180,1181,1182,1226,1227,1228,1230,1234,1235,1238,1239,1245,1247,1248,1249,1250,1251,1252,1253,1255,1256,1263,1271,1288,1289,1299,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320],both:[43,885,892,1036,1055],bottom:1282,boundari:[40,41,1238,1242],branch:[43,960,961],brittl:43,broadcast:[40,41,43,885,888,892,895,896,904,907,910,911,917,918,919,921,939,940,946,1036,1046,1063,1092,1093,1094,1101,1154,1157,1164,1168,1171,1245,1247,1248,1249,1250,1251,1252,1253],broadcast_to:[311,740,1036],build:[1182,1282,1299,1310,1311,1312],build_mod:[1299,1310,1311,1312],builder:[43,1282],built:[962,1036,1039,1182,1299,1310,1311,1312],builtin:43,builtin_ab:[266,921],builtin_add:[266,921],builtin_and:[266,921],builtin_bool:[266,921],builtin_contain:[266,921],builtin_deepcopi:[266,921],builtin_dir:[266,921],builtin_eq:[266,921],builtin_float:[266,921],builtin_floordiv:[266,921],builtin_g:[266,921],builtin_getattr:[266,921],builtin_getattribut:[266,921],builtin_getitem:[266,921],builtin_gt:[266,921],builtin_int:[266,921],builtin_invert:[266,921],builtin_l:[266,921],builtin_lt:[266,590,727,921],builtin_mul:[266,921],builtin_n:[266,921],builtin_neg:[266,921],builtin_or:[266,921],builtin_po:[266,921],builtin_pow:[43,266,921],builtin_radd:[266,921],builtin_rand:[266,921],builtin_rfloordiv:[266,921],builtin_rmul:[266,921],builtin_ror:[266,921],builtin_rpow:[266,921],builtin_rsub:[266,921],builtin_rtruediv:[266,921],builtin_rxor:[266,921],builtin_setitem:[266,921],builtin_some_op:43,builtin_sub:[266,921],builtin_truediv:[266,921],builtin_xor:[266,921],busi:43,bypass:1325,cach:[962,978,1036,1047],cache_fn:1036,calcul:[40,41,42,43,885,886,887,890,891,892,897,898,901,902,921,939,946,1164,1171],call:[43,962,1006,1036,1100,1108,1125,1131,1135,1182,1226,1227,1230,1234,1299,1310,1311,1312,1315,1319,1325,1328],callabl:[40,41,960,961,962,971,972,1006,1036,1047,1059,1061,1090,1125,1178,1179,1180,1181,1182,1226,1230,1231,1232,1234,1235,1263,1274],can:[43,962,1004,1005,1006,1036,1102,1147,1149,1182,1282,1324,1325,1328],cancel_join_thread:1182,cannot:43,captur:1282,cast:[40,41,141,311,464,602,740,1012,1036,1051,1147,1149,1153],catch_except:[1036,1059],categori:43,caus:43,ceil:[88,228,416,548,685,885,1036,1039],cell:[1263,1273,1299,1308],certain:[40,41,1036,1039,1088,1089],chain:[40,41,1178,1179,1180,1321,1322],chang:[43,962,1036,1102,1182,1226,1228,1235,1282,1324],channel:[1036,1068,1147,1149,1150,1299,1300,1301,1302,1303,1304,1305,1306,1308,1309],check:[15,16,17,18,19,40,41,43,962,1001,1011,1012,1017,1026,1035,1036,1045,1064,1077,1085,1117,1127,1131,1137,1182,1226,1227,1234,1282,1325],check_nest:[1226,1234],check_shap:[40,41],check_submod_ret:[1311,1312],check_typ:[40,41],choic:[1282,1325],choleski:[814,1154],choos:[885,899,1036,1128,1154,1159,1164,1168,1282],choose_random_framework:59,chosen:[40,41,1036,1039,1128],chunk:[962,1004,1005,1006,1182],chunk_siz:[962,1006,1182],circl:[1164,1165,1166],clark:1282,clear:[43,962,978,1182],clear_framework_stack:59,clear_mem_on_dev:[462,732,962],click:1282,clip:[40,41,311,464,740,1036,1049,1050,1092,1094,1282],clip_matrix_norm:1036,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,1036],clipped_delta:1182,clone:[40,41,962,981,982,983,984,1182],clone_arrai:1182,clone_it:1182,clone_nest:1182,clonedit:1182,cloneditem:1182,clonednest:1182,close:[43,1147,1152,1164,1166,1182,1328],closest:[885,889,1012,1017],closest_valid_dtyp:1012,code:[40,41,42,43,512,1282,1283,1324,1325],codebas:[962,1004,1005,1182,1282,1325,1328],codomain:[885,886,887,890,891,898,901,902],colab:1282,collect:[15,40,41,462,464,496,501,505,509,510,512,921,960,962,1012,1036,1131,1147,1154,1161,1164,1182,1226,1238,1245,1255,1263,1276,1280,1285,1299,1313,1315],color:[40,41,42,1326,1327],column:[1036,1078],combin:[40,41,42,1147,1152,1282,1328],combined_batch_s:1182,come:1325,command:1282,comment:43,commit:1328,common:[40,41,43,1164,1168],common_key_chain:[40,41],commun:[43,1282,1325],communuti:43,compar:[40,41,913,914,921,939,1036,1038,1043,1044],comparison_oper:[0,9,10],compat:[43,885,888,892,895,896,904,907,917,918,919,921,939,940,946,1036,1063,1102,1164,1171,1282,1328],compil:[311,464,740,1311,1312,1315,1316,1317,1318,1319,1320],compile_on_next_step:[1311,1312,1315,1316,1317,1318,1319,1320],complet:[40,41,43,1154,1159,1182],complex:[1325,1328],compliant:[885,899],compon:[1036,1055],composit:43,comput:[40,41,885,888,892,895,896,899,900,904,907,915,916,921,940,962,1006,1036,1049,1050,1056,1057,1063,1091,1131,1133,1134,1135,1136,1138,1139,1140,1142,1144,1147,1150,1154,1155,1156,1157,1158,1159,1161,1162,1163,1164,1165,1166,1167,1168,1172,1173,1174,1176,1226,1230,1245,1246,1247,1248,1249,1250,1251,1252,1253,1263,1264,1265,1266,1267,1268,1269,1270,1272,1274,1276,1277,1278,1279],concat:[40,41,962,991,992,993,994,1006,1036,1068,1182],concaten:[40,41,141,311,464,602,740,1036,1068,1182,1282],concatten:[40,41,962,991,992,993,994,1006,1182],condit:[464,960,961,1036,1128,1226,1234],conditon:[1226,1234],config:[40,41,1182],config_list:1182,configur:[40,41],conflict:43,conform:43,conjunct:1325,connect:[1299,1309,1310],consid:[40,41,885,899,1154,1159,1324,1328],consist:[40,41,962,994,1182,1245,1246,1311,1312,1325],constant:[962,971,972,1036,1052,1182,1226,1230,1276,1277,1278,1279,1280,1281,1290,1291,1295,1298,1311,1312,1313,1314,1325],constant_kwarg:1182,constant_pad:[311,464,602,740,1036],constitu:[40,41],construct:[1036,1119,1299,1300,1301,1302,1303,1304,1305,1306,1308,1309,1310,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1324],constructor:[40,41,42,1036,1040,1321,1322],consum:[962,1182],cont_feat_dim:[1263,1274],contaienr:[40,41],contain:[15,18,19,42,43,875,877,879,880,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,904,905,907,915,916,917,918,919,921,939,940,946,962,981,985,1006,1012,1016,1036,1037,1041,1048,1049,1050,1053,1063,1077,1092,1094,1103,1114,1115,1131,1133,1134,1136,1138,1139,1140,1164,1171,1178,1179,1180,1181,1182,1238,1239,1245,1247,1248,1249,1251,1253,1299,1300,1301,1302,1303,1304,1305,1306,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[464,740,1036],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[464,1036,1095,1263,1274,1299,1310],context_dim:[1299,1310],contextmanag:[59,60],continu:[43,1182,1325],contract:[40,41,1245,1246],contribut:[1282,1283],contributor:[43,1282],control:1282,conv1d:[206,394,526,864,1263,1282,1299],conv1d_transpos:[206,394,526,864,1263],conv1dtranspos:[1282,1299],conv2d:[206,394,526,667,864,1263,1282,1299],conv2d_transpos:[206,394,526,864,1263],conv2dtranspos:[1282,1299],conv3d:[206,394,526,667,864,1263,1282,1299],conv3d_transpos:[206,394,526,864,1263],conv3dtranspos:[1282,1299],convent:[40,41,1245,1246],conver:[962,978,989,1001,1008,1011,1182],convers:[16,17,18,19,40,41,1182,1282],convert:[15,16,17,18,19,40,41,43,962,989,990,1012,1018,1024,1025,1036,1111,1122,1123,1147,1149,1153,1154,1160,1182,1226,1228,1235,1282,1289],convert_dtyp:1012,convolut:[1263,1264,1265,1266,1267,1268,1269,1270,1299,1300,1301,1302,1303,1304,1305,1306],cool:43,cooler:43,coordin:[1036,1093,1164,1165,1166,1168],copi:[40,41,43,512,1036,1054,1182,1226,1228],copy_arrai:[464,740,1036],copy_nest:1226,core:[462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,510,511,512,513,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,964,965,966,967,968,969,971,972,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1282],corner:43,correct:[43,1282,1325],correctli:[40,41,43,910,911,1154,1157,1164,1168,1245,1247,1248,1249,1250,1251,1252,1253],correspond:[40,41,43,921,946,1036,1051,1238,1239],cos:[88,416,548,685,885,1036,1068,1164,1165,1176,1325],cosh:[88,416,548,685,824,885,1164],cosin:[885,886,890,891,1164,1165,1170],cost:[1131,1133,1134,1136,1138,1139,1140,1178,1179,1180,1181],cost_fn:[1178,1181],could:1328,count:[40,41,908,909,917,918,919,1182,1245,1250,1252],cours:43,cprint:1326,cpu:[40,41,43,962,999,1001,1007,1008,1011,1036,1039,1042,1070,1071,1078,1088,1089,1097,1098,1104,1105,1130,1182,1238,1239,1240,1241,1242,1299,1300,1301,1302,1303,1304,1305,1306,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1319,1321,1322,1324,1325],creat:[40,41,875,876,877,878,880,962,971,972,1036,1039,1042,1069,1070,1071,1078,1088,1089,1097,1098,1104,1105,1121,1130,1131,1144,1182,1238,1239,1240,1241,1242,1282,1283,1288,1289,1290,1299,1300,1301,1302,1303,1304,1305,1306,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1324,1328],create_if_abs:[40,41],create_vari:1290,creation:[40,41,42,43],creation_funct:[405,406,407,408,409,410,875,876,877,878,879,880],crop:[1147,1151],crop_siz:[1147,1151],cross:[311,740,1036,1276,1277,1278,1279],cross_entropi:1276,cuda:[40,41,962,971,990,1007,1036,1039,1042,1070,1071,1078,1088,1089,1097,1098,1104,1105,1130,1182,1238,1239,1240,1241,1242,1299,1300,1301,1302,1303,1304,1305,1306,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1319,1321,1322],cumprod:[141,311,464,740,1036],cumsum:[740,1036],cumul:[1036,1056,1057],current:[40,41,42,43,962,971,995,996,998,1002,1012,1018,1026,1035,1036,1058,1072,1080,1084,1096,1099,1182,1226,1227,1234,1282,1328],current_framework:59,current_framework_str:[464,740,1036,1182],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1263,1264,1265,1266,1267,1268,1269],d_out:[1263,1264,1265,1266,1267,1268,1269],da_can_termin:1182,da_dim_s:[962,1182],da_direct:1182,da_tune_step:[962,1182],dai:1328,daniel:1282,data:[40,41,42,43,875,876,877,878,879,880,882,883,885,886,887,888,889,890,891,892,893,894,895,896,898,899,901,902,904,905,907,908,909,913,914,917,918,919,921,939,940,946,962,964,965,966,967,968,969,974,975,976,990,1012,1016,1017,1018,1022,1023,1024,1025,1026,1027,1028,1035,1036,1039,1042,1063,1069,1078,1085,1098,1102,1113,1117,1130,1131,1137,1145,1164,1171,1182,1263,1272,1282],data_format:[1263,1264,1265,1266,1267,1268,1269,1270,1299,1300,1301,1302,1303,1304,1305,1306],data_type_funct:[411,413,414,881,882,883],dataset:[40,41],datatyp:[40,41,1012,1017,1027,1028],dcdw:[1131,1133,1134,1136,1138,1139],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1131,1138,1139,1315,1317,1318],decay_lambda:[1131,1138,1139,1315,1317,1318],decid:[40,41,1328],decompos:[1154,1155,1159],decomposit:[904,906,1154,1155,1159],decor:43,decrement:[1036,1081],dedic:[1131,1145,1288,1289],deep:[40,41,1282],deep_copi:[40,41],deeper:[962,984,988,994,1182,1226,1235,1282],deepli:[1226,1228],def:[43,60,84,224,412,544,681,963,970,973,1013,1014,1015,1132,1182,1186,1193,1282,1291,1294,1297,1324,1325,1328],default_dev:43,default_devic:962,default_dtyp:[43,1012],default_float_dtyp:1012,default_int_dtyp:1012,default_key_color:[40,41,42],default_nod:1182,default_rng:512,default_v:[1036,1059],defaultdevic:[962,963],defaultdtyp:[1012,1013],defaultfloatdtyp:[1012,1014],defaultintdtyp:[1012,1015],defer:43,defin:[43,1036,1055,1097,1130,1238,1240],definit:43,degre:[1164,1176],del:1182,delai:43,delet:43,delta:[1131,1133,1182],delta_dim_s:1182,delta_percent_mem:1182,delta_sf:1182,delta_util:1182,demo:1282,denomin:[1036,1067,1074,1107,1114,1115,1280,1281,1313,1314],denot:43,dens:[1299,1309],depend:[43,885,886,887,890,891,897,898,901,904,906,913,914,921,946,1036,1128,1282],depth:[40,41,464,488,962,984,988,994,1036,1076,1097,1182,1226,1235,1311,1312],depth_cutoff:[40,41],depthwis:[1263,1270,1299,1306],depthwise_conv2d:[206,394,526,667,864,1263],depthwiseconv2d:[1282,1299],deriv:[875,878,1131,1133,1134,1136,1138,1139,1140,1226,1228,1235,1282,1311,1315,1319,1321],descend:[904,906,913,914],descent:[1131,1136,1315,1320],describ:[40,41,1245,1246],descript:[904,907],design:[1282,1283],desir:[40,41,962,1007,1012,1016,1036,1039,1042,1078,1079,1098,1130,1147,1152,1182,1245,1247,1248,1249,1251,1253],desired_aspect_ratio:[501,504,1147,1152],desired_percent_increas:1182,detail:1328,detect:[40,41,1226,1227,1234],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,885,886,887,888,890,891,892,893,894,898,901,902,904,905,907,917,918,919,921,946,962,997,999,1000,1009,1012,1016,1017,1023,1026,1027,1028,1035,1036,1038,1039,1042,1043,1044,1077,1080,1084,1085,1117,1127,1131,1137,1164,1171,1178,1179,1180,1181,1182,1263,1274],dev:[40,41,42,43,134,305,405,408,462,464,465,467,477,478,479,486,487,488,489,490,495,512,513,595,732,875,878,962,965,966,968,969,971,972,975,976,978,979,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,998,1001,1002,1003,1004,1005,1006,1007,1008,1011,1036,1039,1042,1070,1071,1078,1088,1089,1097,1098,1104,1105,1130,1131,1146,1238,1239,1240,1241,1242,1288,1289,1290,1299,1300,1301,1302,1303,1304,1305,1306,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1319,1321,1322],dev_clon:[40,41,962],dev_clone_arrai:962,dev_clone_it:962,dev_clone_nest:962,dev_dist:[40,41,962],dev_dist_arrai:962,dev_dist_it:962,dev_dist_nest:962,dev_from_str:[43,134,305,462,595,732,962],dev_mapp:962,dev_str:[40,41],dev_to_str:[134,305,462,595,732,962],dev_unifi:962,dev_unify_arrai:962,dev_unify_it:962,dev_unify_nest:962,dev_util:962,devclonedit:962,devcloneditem:962,devclonednest:962,devdistit:962,devdistitem:962,devdistnest:962,develop:[43,1282,1325,1328],deviat:[40,41,1238,1241,1245,1251,1280,1281,1313,1314],devic:[21,40,41,43,405,406,407,410,463,464,476,875,876,877,878,879,880,964,965,966,967,968,969,971,972,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1036,1039,1042,1069,1070,1071,1078,1088,1089,1097,1098,1104,1105,1130,1131,1146,1238,1239,1240,1241,1242,1282,1288,1289,1299,1300,1301,1302,1303,1304,1305,1306,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1319,1321,1322],devmanag:[962,970],devmapp:[962,972],devmappermultiproc:962,diag:[904,906],diagon:[108,241,436,568,705,875,879,904,1036,1078],dict:[15,16,17,18,19,40,41,42,962,964,967,971,972,974,984,985,986,987,988,1036,1060,1061,1062,1090,1178,1179,1180,1182,1226,1228,1229,1230,1233,1235,1288,1289],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,881,882,885,892,962,981,982,985,986,1154,1159,1182,1263,1272,1282,1325,1328],differenti:[1282,1325],dilat:[1263,1264,1265,1266,1267,1268,1269,1270,1299,1300,1301,1302,1303,1304,1305,1306],dim:[40,41,43,904,906,1036,1097,1147,1148,1152,1182,1299,1310],dim_siz:[40,41,962,1182],dimens:[40,41,42,875,879,904,905,906,907,908,909,910,911,917,918,919,962,993,1036,1046,1051,1055,1060,1061,1062,1065,1068,1075,1087,1097,1101,1102,1112,1113,1116,1124,1126,1147,1151,1154,1157,1178,1179,1180,1181,1182,1238,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1255,1260,1263,1264,1265,1266,1267,1268,1269,1270,1273,1276,1278,1279,1299,1300,1301,1302,1303,1304,1305,1306,1309,1310],dimension:[40,41,512,904,906,907,917,918,919,1036,1112,1113],direct:1182,directli:[43,1226,1235,1325,1328],directori:[1036,1109,1120],discord:43,discret:[1276,1278],discuss:43,disk:[40,41,1147,1149],distanc:[1036,1039],distribut:[40,41,962,981,985,986,987,988,1182,1238,1239,1240,1241,1242,1263,1271,1299,1307,1311,1312],distribute_nest:1182,distributedarrai:[40,41],distrubt:[1276,1278],dive:[1282,1325],divid:[40,41,88,228,416,548,685,885,1036,1112,1114,1164],dividend:[885,892,1164,1171],divis:[885,892,1036,1067,1074,1107,1114,1115,1131,1133,1134,1138,1164,1171,1315,1316,1317],divisor:[885,892,1131,1133,1134,1138,1164,1171,1315,1316,1317],doc:1282,docstr:43,document:43,doe:[40,41,43,1036,1039,1112,1324],doesn:[1154,1159,1282],doing:43,domain:[885,886,887,890,891,898,901,902,1164,1165],don:[43,1282],done:43,door:1328,dot:[1154,1156,1263,1274,1275,1299,1310],down:1324,downscal:[1036,1049,1050],drag:[1282,1328],draw:[1238,1239,1241,1242],drawn:[1238,1239,1240,1241,1242],drop:[1282,1328],dropout:[1263,1282,1299,1310],dropout_r:[1299,1310],ds_tune_step:962,dtype:[40,41,43,141,311,405,406,407,408,410,411,413,414,464,465,467,468,476,479,495,602,740,875,876,877,878,880,881,882,883,910,911,1016,1017,1018,1019,1020,1021,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1039,1042,1069,1078,1097,1098,1130],dtype_bit:[141,311,464,602,740,1012],dtype_from_str:[43,141,311,464,602,740,1012],dtype_in:[464,473,474,475,1012,1018,1023,1024,1025,1026,1027,1028,1035],dtype_to_str:[141,311,464,602,740,1012],duplic:[40,41,43],dure:[40,41,43,960,961,1036,1125,1131,1133,1134,1138,1178,1179,1180,1181,1311,1312,1315,1316,1317,1319],dynam:[43,464,469,960,961],each:[40,41,42,43,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,904,906,921,940,946,962,971,972,981,982,983,984,985,986,987,993,1005,1006,1036,1037,1038,1052,1063,1101,1112,1116,1119,1129,1131,1134,1136,1138,1139,1140,1147,1150,1164,1166,1171,1173,1174,1182,1226,1230,1238,1239,1245,1246,1263,1264,1265,1266,1267,1268,1269,1270,1271,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1310,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1325],eager:1325,easi:1328,easili:1282,econom:1328,ecosystem:1282,edg:[1036,1048,1052,1129],effect:[1131,1140],effective_grad:[1131,1140],effici:1328,einop:[40,41,1036,1060,1061,1062],einops_rearrang:[40,41,1036],einops_reduc:[40,41,1036],einops_repeat:[40,41,1036],einstein:[40,41,1245,1246],einsum:[40,41,192,382,514,657,844,1245],either:[40,41,43,885,892,898,901,1036,1059,1090,1093,1095,1178,1179,1180,1181,1182,1299,1310,1311,1312,1325],eleg:1182,element:[40,41,43,512,875,879,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,908,909,915,916,917,918,919,921,939,940,946,962,983,987,993,1012,1016,1036,1037,1039,1041,1043,1044,1048,1049,1050,1056,1057,1063,1066,1067,1078,1079,1092,1094,1101,1103,1112,1123,1128,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1182,1245,1246,1248,1250,1252,1255,1256,1257,1258,1259,1260,1261,1262,1263,1271,1299,1307],elementwis:[40,41,921,939],elementwise_affin:[1313,1314],elementwise_funct:[885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902],elemtn:[1238,1239],elif:1182,els:[43,1036,1045,1059,1064,1182],elsewher:[1036,1128],emphas:1282,empti:[40,41,77,217,405,537,674,875,917,918,919,1154,1159,1182],enabl:[40,41,42,43,1282],encapsul:[881,883],encod:[1036,1068,1147,1149],end:[1036,1039,1282,1325],engag:43,ensur:43,entir:[40,41,917,918,919,962,1006,1182,1282,1299,1308],entri:[40,41,1036,1088,1089,1112,1113],entropi:[1276,1277,1278,1279],enumer:1182,environ:1282,eps:[411,881,882],epsilon:[1131,1133,1134,1138,1276,1277,1278,1279,1280,1281,1313,1314,1315,1316,1317],equal:[40,41,88,416,548,685,885,893,904,905,913,914,1036,1038,1043,1044,1052,1112,1129,1164,1176,1238,1242],equality_matrix:[1036,1038],equat:[40,41,1245,1246],equival:[885,899,904,907,1036,1039,1164,1176],erf:[510,824,1164],error:[40,41,43,962,1036,1113,1164,1172,1182,1255,1256,1311,1312,1315,1319],essenti:43,etc:[40,41,43,962,1007,1036,1039,1042,1070,1071,1078,1088,1089,1097,1098,1104,1105,1130,1182,1238,1239,1240,1241,1242,1299,1300,1301,1302,1303,1304,1305,1306,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1319,1321,1322,1328],euclidean:[904,907],euler:874,evalu:[40,41,885,897,898,900,917,918,919,1036,1093,1226,1227,1234],even:[43,1328],evenli:[40,41,1036,1039,1088,1089,1112],everi:[43,1036,1038,1328],exact:[40,41],exampl:[43,960,961,1036,1048,1116,1154,1159,1282,1324,1325,1328],example_input:[464,469,960,961],exc_tb:1182,exc_typ:1182,exc_val:1182,exce:[1036,1094],except:[40,41,44,47,917,918,919,1036,1039,1045,1051,1059,1125,1182],excess_s:1182,excit:[1282,1325],exclud:[59,61,1036,1039,1238,1242],exclus:[40,41,464,471,484,496,498,1036,1056,1085,1131,1137,1238,1240],execut:[43,1036,1125,1325],execute_with_gradi:[172,359,496,637,804,1131,1282,1324],exist:[40,41,1036,1059,1182,1282,1315,1319,1328],exp:[824,1164],expand:[40,41,1036,1065,1068],expand_dim:[40,41,311,740,1036,1182],expect:[1036,1040],explain:[43,1325],explicitli:[43,1299,1308,1310,1311,1312,1325],expon:[43,921,946,1036,1115],exponenti:[43,921,946,1164,1172,1173],expos:[1036,1042,1053],express:[885,890,901,1036,1093],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1131,1135],eye:[1154,1156],fabian:1282,fabio:1282,factor:[904,906,962,971,1004,1005,1006,1131,1133,1134,1138,1139,1182,1263,1264,1265,1266,1267,1268,1269,1270,1299,1300,1301,1302,1303,1304,1305,1306,1315,1316,1317,1318],fail:43,falck:1282,fall:[1311,1312,1315,1319],fallback_to_non_compil:[1311,1312,1315,1319],fals:[15,18,19,40,41,42,59,66,67,68,69,70,462,464,471,472,484,491,494,496,497,498,505,506,885,893,894,899,904,907,910,911,913,914,915,916,917,918,919,962,980,993,1001,1006,1011,1012,1019,1020,1021,1022,1036,1038,1056,1059,1064,1068,1075,1085,1090,1110,1112,1126,1128,1131,1134,1135,1136,1137,1138,1139,1140,1154,1157,1178,1179,1180,1181,1182,1226,1227,1228,1230,1234,1235,1245,1247,1248,1249,1250,1251,1252,1253,1288,1289,1311,1312,1315,1316,1317,1318,1319,1320],fan_in:1290,fan_mod:1290,fan_out:1290,far:[1226,1227,1234,1324],faster:[960,961],favourit:[1282,1324],feasibl:1328,feat_dim:[1263,1274,1275],fed:[962,1006,1182],feed:[962,1006,1182],few:43,field:1328,file:[40,41,43,1036,1109,1120,1311,1312],filepath:[40,41],fill:[40,41,875,876,877,878,880,1036,1069,1098,1238,1240],fill_valu:[464,476,1036,1069],filter:[1263,1264,1265,1266,1267,1268,1269,1270,1299,1300,1301,1302,1303,1304,1305,1306,1328],filter_s:[1299,1300,1301],filter_shap:[1299,1302,1303,1304,1305,1306],find:[40,41,43,1328],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[83,84,223,224,411,412,543,544,680,681,881],finish:[1282,1328],finit:[885,892,893],first:[40,41,43,512,885,888,895,896,904,905,906,921,939,960,961,962,993,1036,1043,1051,1055,1063,1088,1089,1116,1118,1131,1135,1178,1179,1180,1181,1182,1226,1227,1234,1238,1244,1245,1250,1252,1299,1310,1311,1312,1315,1319,1325,1328],firstlayersiren:[1282,1290],firstli:[1325,1328],fist:[962,1006,1182],fit:[40,41,462,464,496,501,505,509,510,512,1036,1101,1147,1152],fix:43,fkt:1328,flag:[40,41,43,1131,1137],flat:[40,41,43,1036,1101,1104],flat_list:[40,41],flatten:[40,41,904,907,910,911,1036,1068,1101,1245,1247,1248,1249,1251,1253],flatten_key_chain:[40,41,1311,1312],flexibl:[1282,1325],flip:[40,41,112,245,440,572,709,908],float32:[43,464,479,1012,1016,1024,1025,1036,1039,1042,1078,1098,1130],float_dtyp:[1012,1020,1030],float_img_to_uint8_img:1147,floor:[311,464,740,1036,1067,1182],floormod:[311,464,740,1036],flow:[885,892],fluid:1328,folder:[43,1282],follow:[40,41,43,881,883,904,907,962,1006,1036,1081,1082,1083,1114,1115,1131,1134,1136,1138,1139,1140,1182,1226,1230,1235,1263,1274,1275,1282,1299,1309,1315,1319],followng:[881,882],fomaml_step:1178,forget:[1131,1133,1134,1138,1315,1316,1317],fork:[1036,1095,1282,1283],forkserv:[1036,1095,1182],form:[15,16,17,18,19,40,41,875,879,904,905,1036,1042,1131,1134,1136,1138,1139,1140,1226,1228,1235,1263],format:[40,41,43,962,980,1012,1016,1018,1022,1036,1039,1042,1078,1098,1130,1182,1245,1246,1282,1324,1325],format_fn:[40,41],format_key_chain:[40,41],forward:[1311,1312,1315,1319,1324],found:[40,41,42],fourier:[1036,1068],fourier_encod:1036,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,113,115,118,120,122,123,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,176,177,178,180,181,182,186,187,188,189,190,191,193,194,195,196,197,198,199,202,204,205,207,208,209,210,211,212,213,218,219,220,221,222,224,225,226,229,230,231,232,233,234,235,236,237,238,239,242,243,244,246,248,251,254,255,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,361,362,363,365,366,367,369,370,371,372,374,375,378,379,380,381,383,384,385,386,387,388,389,390,393,395,396,397,398,399,400,401,406,407,408,409,410,412,413,414,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,437,438,439,441,443,446,448,450,451,463,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,497,498,499,500,502,503,504,506,507,508,511,513,515,516,517,518,519,520,521,524,525,527,528,529,530,531,532,533,538,539,540,541,542,544,545,546,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,569,570,571,573,575,578,580,582,583,591,596,597,598,599,600,601,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,638,639,640,641,643,644,645,647,648,649,653,654,655,656,658,659,660,661,662,663,664,668,669,670,675,676,677,678,679,681,682,683,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,706,707,708,710,712,715,717,719,720,728,733,734,735,736,737,738,739,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,805,806,807,808,809,811,812,813,815,816,817,818,819,820,822,823,825,826,827,828,829,830,831,832,833,834,835,836,838,839,840,841,842,843,845,846,847,848,849,850,851,854,855,856,857,858,859,860,862,863,865,866,867,868,869,870,871,876,877,878,879,880,882,883,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,905,906,907,909,911,914,915,916,918,919,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1162,1163,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1249,1250,1251,1252,1253,1256,1257,1258,1259,1260,1261,1262,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1277,1278,1279,1281,1282,1286,1287,1288,1289,1291,1292,1293,1294,1295,1296,1297,1298,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1312,1314,1315,1316,1317,1318,1319,1320,1322,1323,1324,1325,1327,1328],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1182,framewrk:[1036,1095],free:43,freed:43,freeli:43,frequenc:[1036,1068],from:[40,41,42,43,875,878,885,902,904,905,908,909,915,916,917,918,919,962,971,972,1006,1012,1018,1036,1059,1070,1071,1078,1102,1113,1121,1128,1131,1134,1138,1147,1151,1154,1159,1178,1179,1180,1181,1182,1226,1228,1235,1238,1239,1240,1241,1242,1245,1250,1252,1263,1271,1274,1282,1288,1289,1299,1307,1310,1315,1319,1324,1325],from_cal:[1311,1312],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,141,311,464,602,740,881,882,1036,1154,1159,1282],full_matric:[904,906],fulli:[43,1282,1299,1309,1310,1324],func:[40,41,464,469,496,497,960,961,962,1006,1036,1047,1131,1135,1182],further:[43,1328],furthermor:1328,futur:1328,gain:1290,gamma:[1280,1281],gather:[40,41,141,311,464,602,740,1036,1071],gather_nd:[40,41,141,311,464,602,740,1036],gauss:[1164,1172],gaussian:[1255,1256],geglu:[1282,1285],gelu:[392,523,853,1255,1282,1285],gener:[23,40,41,43,462,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,512,960,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1137,1238,1240,1242,1243,1282,1315,1319],geometr:[1036,1068],get:[40,41,43,881,882,883,962,971,972,980,995,996,1001,1005,1008,1011,1012,1022,1023,1036,1040,1072,1073,1074,1100,1182,1282,1299,1308,1328],get_all_arrays_in_memori:1036,get_all_arrays_on_dev:962,get_framework:59,get_initial_st:[1299,1308],get_min_bas:1036,get_min_denomin:1036,get_mod_kei:[1311,1312],get_num_dim:[464,740,1036],get_referrers_recurs:1036,getfullargspec:1182,gist:1282,give:[43,1036,1102,1325],given:[40,41,43,875,876,908,909,962,995,1001,1004,1005,1006,1008,1011,1012,1016,1036,1039,1042,1048,1056,1057,1071,1088,1089,1098,1101,1104,1105,1112,1119,1124,1126,1130,1131,1133,1134,1136,1138,1139,1140,1154,1156,1160,1164,1165,1182,1226,1231,1232,1238,1241,1242,1244,1245,1248,1250,1251,1252,1253,1263,1264,1265,1266,1267,1268,1269,1270,1288,1289,1328],global:[40,41,42,962,971,972,979,1004,1005,1006,1012,1019,1020,1021,1036,1058,1073,1074,1100,1106,1107,1108,1114,1115,1131,1146,1182,1280,1281,1313,1314],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1282,1290,1299,1300,1301,1302,1303,1304,1305,1306,1308,1309],good:43,googl:1282,got:[43,1282],gpu0:43,gpu2:43,gpu:[962,997,1000,1182],gpu_is_avail:[462,962,1182],grad:[1282,1315,1319,1324],gradient:[25,40,41,497,498,499,500,962,1006,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1150,1178,1179,1180,1181,1282,1315,1316,1317,1318,1319,1320,1324,1328],gradient_descent_upd:[1131,1178,1179,1180,1181],gradient_imag:[175,364,501,642,810,1147],gradienttrack:[1131,1132],graph:[1131,1134,1136,1138,1139,1140,1311,1312],greater:[40,41,885,892,1036,1039,1066,1113,1238,1242],green:[40,41,42,1326,1327],grid:[1036,1093],group:[1147,1152],guid:[43,1282,1283,1328],gym:1282,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1328,half:[1036,1039,1182,1238,1242],hand:1282,handl:[40,41,42,43,960,961,962,978,980,989,990,1001,1008,1011,1131,1134,1136,1138,1139,1140,1182,1315,1316,1317,1318,1319,1320],happen:43,has:[40,41,43,885,892,910,911,1036,1116,1154,1159,1164,1167],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,1036],hasattr:1182,have:[40,41,43,875,876,877,878,879,880,881,882,885,886,887,888,889,890,891,892,893,894,895,896,898,899,901,902,904,905,906,907,908,909,910,911,913,914,917,918,919,921,939,940,946,1036,1051,1055,1060,1061,1062,1063,1069,1116,1131,1137,1145,1164,1171,1182,1282,1324,1325],haven:43,hdf5:[40,41,1311,1312],head:[1263,1274,1299,1310],head_dim:[1299,1310],height:[1147,1152],height_cutoff:[40,41],help:[43,59,411,462,463,962,974,975,976,977,1012,1131,1282,1290,1292,1293,1295,1296,1298],here:[43,1282],hidden:[1263,1273,1299,1308],hierarch:[1036,1053],hierarchi:[40,41],high:[40,41,512,1238,1240,1242],higher:[904,906,1131,1134,1136,1138,1139,1140],highest:[1238,1240],highest_util:1182,highest_util_nod:1182,highli:1282,highlight:1328,hint:43,hkt:1328,hold:[1012,1016,1036,1039,1042,1104,1105],host:1282,hot:[1036,1097],hour:43,how:[1282,1299,1310,1311,1312,1325,1328],howev:[43,1325],http:1328,hyperbol:[885,886,887,891,1164,1169,1170,1175,1177,1255,1262],hypothet:[43,1328],icon:1282,idea:1282,ident:[40,41,43,141,311,464,602,740,1036],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[874,881,882,885,892,902],if_exist:[40,41],ignor:[40,41,1315,1319],ignore_key_error:[40,41],ignore_miss:[1315,1319],ignore_non:[40,41],iii:43,iinfo:[83,223,411,543,680,881],imag:[27,502,503,504,1036,1087,1148,1149,1150,1151,1152,1153,1263,1264,1265,1266,1267,1269,1270,1282,1328],image_dim:[1147,1151],imkkhk:1328,immedi:[1282,1325,1328],implement:[43,885,886,887,890,891,897,898,901,913,914,921,946,1282,1325,1328],in_featur:[1263,1272],inadvert:43,includ:[40,41,43,904,907,917,918,919,1036,1039,1077,1114,1115,1127,1226,1227,1238,1242,1299,1309,1310,1313,1314,1324],include_deriv:[1226,1228,1235],include_empti:[40,41],include_inf:[40,41,1036,1077,1127],include_nest:[1226,1227],include_self:[40,41],inclus:[43,1238,1240],incom:[1263,1272],increas:[962,984,988,994,1036,1052,1065,1129,1182,1226,1235],increasingli:1328,increment:[1036,1082,1182],inde:1282,indent:[40,41,42],independ:[1238,1239],index:[40,41,464,512,910,911,913,914,1036,1041,1070,1071,1093,1113,1116,1226,1229,1231,1232,1233,1236],index_nest:1226,indic:[40,41,464,477,478,488,489,490,904,907,910,911,913,914,1036,1041,1070,1071,1079,1097,1104,1105,1226,1227,1229,1231,1232,1233,1234,1236,1237,1238,1239,1255,1260,1263,1264,1265,1266,1267,1268,1269,1270,1280,1281,1299,1300,1301,1302,1303,1304,1305,1306,1311,1312],indices_wher:[141,311,464,740,1036],indistinguish:[885,902],inevit:1328,inf:[40,41,904,907,1036,1077,1086,1127,1164,1167],infer:[875,878,915,916,960,961,1036,1075,1078,1102,1110,1147,1151,1154,1159,1325,1328],infin:[885,886,887,889,890,891,892,893,898,901,902,904,907,917,918,919,1036,1086],infinit:[885,902],inform:[881,882,883,1131,1142],init_c:[1263,1273],init_h:[1263,1273],init_on_first_step:[1315,1319],initi:[40,41,42,43,59,411,462,463,962,974,975,976,977,1012,1131,1182,1263,1273,1282,1292,1293,1295,1296,1298,1299,1300,1301,1302,1303,1304,1305,1306,1308,1309,1310,1311,1312,1315,1319],initialz:[1311,1312],inner:[1178,1179,1180,1181],inner_batch_fn:[1178,1179,1180],inner_batch_shap:[1263,1272],inner_cost_fn:[1178,1179,1180],inner_grad_step:[1178,1179,1180,1181],inner_learning_r:[1178,1179,1180,1181],inner_optimization_step:[1178,1179,1180,1181],inner_v:[1178,1179,1180],innermost:[875,879,904,905],inp:1182,inplac:[40,41,1036,1045,1080,1084,1117,1131,1134,1136,1138,1139,1140,1288,1289,1315,1316,1317,1318,1319,1320],inplace_arrays_support:[464,1036],inplace_decr:[141,311,464,602,740,1036],inplace_incr:[141,311,464,602,740,1036],inplace_oper:[0,11,12],inplace_upd:[40,41,141,311,464,602,740,1036,1288,1289],inplace_variables_support:[464,1036],input:[15,18,19,40,41,42,43,875,878,879,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,904,905,906,907,908,909,910,911,913,914,915,916,917,918,919,960,961,962,971,972,979,980,981,984,985,988,994,1006,1007,1012,1016,1017,1019,1020,1021,1022,1023,1027,1028,1036,1037,1038,1041,1043,1044,1045,1046,1048,1049,1050,1051,1052,1054,1056,1057,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1075,1077,1078,1079,1081,1082,1083,1085,1086,1087,1091,1092,1093,1094,1101,1103,1110,1111,1113,1116,1117,1118,1119,1121,1122,1123,1124,1126,1127,1129,1131,1135,1137,1142,1146,1147,1148,1149,1150,1151,1153,1154,1157,1159,1161,1162,1163,1164,1167,1169,1170,1171,1175,1176,1177,1178,1179,1180,1181,1182,1238,1239,1245,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1280,1281,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1313,1314,1325],input_ax:[962,1006,1182],input_channel:[1299,1300,1301,1302,1303,1304,1305,1308,1309],input_queu:1182,inputs_split:1182,insert:[910,911,1036,1065],insid:43,inspect:1182,inspir:1328,instal:1282,instanc:[15,16,17,18,19,40,41,43,512,921,939,940,946,962,971,1182,1288,1289,1321,1322],instead:[40,41,43,512,1245,1247,1248,1249,1250,1251,1252,1253,1328],int32:43,int64:[1012,1016,1036,1039,1042,1078,1098,1130],int_dtyp:[1012,1021,1031],integ:[40,41,512,881,883,885,888,889,904,907,917,918,919,1012,1028,1036,1039,1066,1103,1112,1238,1240,1243],integr:1282,intend:43,inter:1282,interact:1282,interchang:[40,41,1036,1118],interest:1282,interfac:[1036,1042,1325],intermedi:[40,41],intern:[40,41,962,1131,1145,1182,1226,1227,1234,1235,1290,1299,1300,1301,1302,1303,1304,1305,1306,1308,1309,1310,1311,1312,1313,1314,1321,1322],interpol:[1036,1087],intersect:[1164,1165],interv:[40,41,917,918,919,1036,1039,1048,1088,1089,1164,1166,1238,1242],introduc:1328,inv:[814,1154,1328],invalid:[917,918,919],invalid_dtyp:1012,invers:[885,886,887,1154,1156,1158,1164,1165,1166,1167,1169,1328],invert:[1154,1156,1158],invest:1328,investig:43,invoc:[960,961],involv:[885,892],irrespect:1282,is_al:1182,is_arrai:[141,311,464,602,740,1036,1182],is_float_dtyp:1012,is_int_dtyp:1012,is_mean:1182,is_sum:1182,is_vari:[172,359,496,637,804,1131],isfinit:[88,228,416,548,685,885],isinf:[311,602,740,1036],isinst:1182,isnan:[88,228,416,548,685,885],isnumer:1182,issu:[1282,1283],issue_numb:43,item:[15,19,40,41,921,933,934,962,971,972,974,981,983,985,987,993,1012,1019,1036,1053,1076,1114,1115,1182,1226,1230,1231,1232,1235,1236,1237,1282,1311,1312,1324],iter:[15,16,17,18,19,40,41,42,960,961,962,965,966,968,969,971,972,975,976,983,985,986,987,988,993,1006,1036,1038,1046,1051,1052,1078,1093,1098,1101,1102,1105,1110,1112,1116,1119,1124,1129,1182,1226,1227,1228,1230,1234,1235],iterbal:[962,983,987,993,1182],its:[512,962,1006,1036,1078,1102,1118,1124,1182,1282],itself:[43,1226,1235],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,405,406,407,408,409,410,411,413,414,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,874,875,876,877,878,879,880,881,882,883,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,904,905,906,907,908,909,910,911,913,914,915,916,917,918,919,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,964,965,966,967,968,969,971,972,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1285,1286,1287,1288,1289,1290,1292,1293,1295,1296,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1326,1327],ivy_backend:[40,41],ivy_bay:1328,ivy_test:43,ivyfcmodel:1324,ivyh:[40,41,42],ivymodul:[203,861],jame:1282,jax:[43,1131,1137,1282,1328],jax_concat:1282,jnp:1282,join:[40,41,1036,1051,1116,1182],journal:1282,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1282,1299,1308,1328],kaimingnorm:[1290,1294],kalman:1328,kalman_filt:1328,kalman_filter_step:1328,kalman_filter_upd:1328,keep:[40,41,962,1007,1036,1126,1182,1282,1283,1328],keep_inner_v:[1178,1179,1180],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1178,1179,1180],keepdim:[40,41,464,494,505,506,904,907,910,911,915,916,917,918,919,1036,1126,1154,1157,1245,1247,1248,1249,1250,1251,1252,1253],kei:[15,16,17,40,41,42,43,921,926,962,974,1036,1053,1178,1179,1180,1182,1226,1229,1233,1263,1274,1275,1282,1288,1289,1299,1310,1315,1319],kept:[40,41,42,1178,1179,1180],kera:1328,kernel:[1263,1273],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,962,971,972,984,988,994,1036,1040,1060,1061,1062,1090,1182,1226,1230,1311,1312],keyword_color_dict:[40,41,42],kind:[881,882,883,1328],kwarg:[15,16,17,40,41,42,59,63,962,971,984,988,994,1036,1090,1182,1288,1289,1311,1312],kwarg_stateful_idx:[1311,1312],kwargs_clon:1182,kwargs_dist:1182,kwargs_uni:1182,label:[43,1276,1277,1278,1279],lamb:[1131,1138,1282,1315],lamb_upd:1131,lambda:[1182,1315,1318,1320,1324],lar:[1131,1138,1139,1282,1315],larg:[885,892],larger:[881,882,1036,1048],largest:[40,41,881,882,883,1036,1066],lars_upd:1131,last:[40,41,904,905,906,908,909,913,914,917,918,919,1036,1039,1055,1087,1112,1116,1154,1157,1245,1250,1252,1255,1260,1263,1273,1299,1309],later:[40,41,1036,1047],latest:[1299,1308],layer:[1131,1134,1136,1138,1140,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1280,1281,1282,1290,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1319,1321,1322,1328],layer_norm:1280,layernorm:[1282,1313],layerwis:[1131,1139,1315,1318],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1226,1227,1234],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1255,1256,1257],leaky_relu:[853,1255],learn:[915,916,1131,1134,1136,1138,1139,1140,1154,1159,1178,1179,1180,1181,1238,1244,1282,1315,1316,1317,1318,1319,1320,1325,1328],learnabl:[1280,1281,1313,1314],least:43,leav:[15,18,19,40,41,1226,1227,1228,1234,1235],left:[40,41,43,910,911,1154,1157,1245,1247,1248,1249,1250,1251,1252,1253,1282],leftmost:[40,41],len:1182,length:[40,41,42,1036,1039,1102,1113,1124],lenton2021ivi:1282,lenton:1282,less:[40,41,43,88,228,416,548,685,885,886,889,892,898,902,904,907,1182,1238,1242],less_equ:[88,416,548,685,885],less_util_node_str:1182,let:[1325,1328],level:1282,librari:[885,899,1282,1324,1328],lightweight:1282,like:[43,1131,1137,1238,1242,1282,1324,1325,1328],likewis:43,limit:[40,41,42,43,881,882,883,1036,1048,1049,1050],linalg:[29,1155,1156,1157,1158,1159,1160,1282],line:43,linear0:[1282,1324],linear1:1282,linear2:1324,linear:[1036,1068,1087,1154,1255,1256,1257,1258,1263,1271,1282,1299,1300,1301,1302,1303,1304,1305,1306,1324],linear_algebra:[505,506,507,508,904,905,906,907],linear_resampl:[141,311,464,602,740,1036],linearli:[1036,1068],link:[43,1282],linspac:[141,311,464,602,740,1036,1039],list:[15,18,19,40,41,405,406,407,410,875,876,877,880,908,909,917,918,919,962,971,972,981,982,984,985,986,988,991,992,1006,1036,1039,1042,1044,1093,1111,1112,1121,1126,1178,1179,1180,1182,1226,1227,1228,1230,1234,1235,1263,1264,1265,1266,1267,1268,1269,1270,1282,1283,1288,1289,1299,1300,1301,1302,1303,1304,1305,1306],list_join:[40,41,42],list_stack:[40,41],liter:[904,907],littl:1325,load:[40,41],loaded_kwarg:1182,loader:1282,local:43,local_set:[1036,1076],locat:[43,1036,1086,1238,1239],log1p:[88,416,548,685,885],log2:[88,416,548,685,885],log:[824,885,897,1036,1089,1164,1182,1276,1277,1278,1279],logarithm:[885,897,898,1164,1174],logic:[31,885,899,917,918,919,1162,1163,1282],logical_and:[373,821,1161],logical_not:[88,228,416,548,685,885],logical_or:[373,821,1161],logit:[1276,1279],logspac:[141,311,464,602,740,1036],look:[43,1325,1328],loop:[1178,1179,1180,1181],loss:[1277,1278,1279,1282,1324],loss_fn:[1282,1324],lot:1325,low:[40,41,512,1238,1240,1242],lower:[40,41,43,875,879,1036,1092,1238,1242],lower_depth:[1311,1312],lowest:[15,18,19,40,41,1226,1235,1238,1240],lstm:[1263,1273,1282,1299],lstm_updat:[43,1263],machin:[881,882,883,915,916,1154,1159,1238,1244,1282,1325,1328],made:43,magnitud:[885,892],mai:[885,896,899,913,914,1036,1039,1059,1063,1282,1325,1328],main:[875,879,904,905,1036,1078,1282],mainli:1282,maintain:[43,913,914],make:[43,512,962,1182,1282,1325],maml:[1178,1179,1180],maml_step:1178,manag:[962,1182],manhattan:[904,907],mani:[40,41,43,1036,1112,1282],manipulation_funct:[908,909],manner:[15,18,19,40,41,43,1226,1235],manual:[1226,1227,1234,1328],map:[40,41,42,962,971,1036,1086,1182,1226,1231,1232,1235,1299,1310,1324],map_cont:[40,41],map_nest_at_index:1226,map_nest_at_indic:1226,map_sequ:[40,41],mapper:[962,971,972,1182],mark:43,mask:[1263,1274,1275],master:43,match:[40,41,1036,1090],match_kwarg:1036,math:[33,511,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1182,1282],mathbb:[1154,1160],mathbf:[1154,1160],mathemat:[874,885,892,904,907],matmul:[43,311,464,602,740,1036,1328],matplotlib:1325,matric:[875,879,904,905,1263,1272],matrix:[40,41,875,879,904,905,1036,1038,1049,1091,1154,1155,1156,1157,1158,1159,1160,1263,1272,1299,1309],matrix_norm:[40,41,179,368,505,646,814,1154],matter:1282,max:[40,41,411,881,882,883,1036,1049,1050,1061,1092,1104,1105,1182,1245,1247,1315,1317],max_batch_s:[40,41],max_chunk_s:[962,1006,1182],max_depth:[40,41,962,966,969,976,984,988,994,1036,1076,1182,1226,1235],max_dev_dim_step_ratio:962,max_freq:[1036,1068],max_length:[40,41],max_node_dim_step_ratio:1182,max_norm:[40,41,1036,1049,1050],max_split_factor_step_s:[962,1182],max_trust_ratio:[1131,1138,1315,1317],maxim:[1282,1325,1328],maximis:1282,maximum:[40,41,42,740,910,911,962,984,988,994,1006,1036,1048,1049,1050,1068,1131,1138,1182,1226,1235,1245,1247],mayb:[15,18,19],mdi:1182,mean:[40,41,512,962,991,992,993,994,1006,1036,1061,1178,1179,1180,1181,1182,1226,1230,1238,1241,1245,1248,1251,1253,1290,1324,1328],measur:[1263,1274,1299,1310],mech:1282,mechan:[1282,1328],medic:1328,member:43,memori:[962,978,1001,1006,1008,1011,1182,1263,1273,1282],mention:43,merg:43,merge_with_upstream:43,meshgrid:[311,464,740,1036],messag:[1326,1327],meta:[35,1179,1180,1181,1282],method:[40,41,42,43,512,1036,1042,1053,1093,1104,1105,1131,1138,1139,1182,1226,1227,1234,1235,1282,1299,1310,1311,1312,1325],might:[1036,1059,1328],min:[40,41,119,411,447,579,716,881,882,883,904,907,915,1036,1061,1094,1104,1105,1114,1154,1159,1182,1245,1249],min_bas:[1036,1115],min_denomin:[1036,1114],min_dev_dim_s:962,min_node_dim_s:1182,min_sf_tune_step:[962,1182],min_unit_dev_tune_step:962,min_unit_node_tune_step:1182,mind:1282,mini:[1280,1281,1313,1314],minimum:[40,41,740,915,916,962,1012,1016,1036,1039,1041,1042,1048,1073,1074,1106,1107,1114,1115,1182,1245,1249],miss:[1315,1319],ml_framework:[1036,1039,1154,1159],mod:[1036,1067],mod_depth:[1311,1312],mod_height:[1311,1312],mod_with_top_mod_key_chain:[1311,1312],mode:[40,41,505,507,885,892,904,906,960,961,962,991,992,993,994,1006,1154,1159,1182,1325],model:[1282,1324],modul:[40,41,42,59,1036,1095,1182,1282,1283,1285,1286,1287,1288,1289,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1313,1314,1321,1322,1328],moment:[1131,1133,1134,1138,1315,1316,1317],more:[43,908,909,1036,1116,1182,1282,1325,1328],more_util_node_str:1182,most:[40,41,43,1154,1159,1282,1328],move:[40,41,43,962,1007,1182],much:[43,1282,1328],multi:[512,1036,1095,1263,1274,1299,1310],multi_head_attent:1263,multi_index_nest:1226,multi_map:[40,41],multi_nod:1182,multidev:[962,973,974,975,994],multidevcontain:[40,41],multidevic:[962,971],multidevit:[962,965,968,971,972,976],multidevitem:[962,964,967],multidevnest:[962,966,969],multiheadattent:[1282,1299],multinod:[1182,1186],multinodecontain:1182,multinodeit:1182,multinodeitem:1182,multinodenest:1182,multinomi:[185,377,512,652,837,1238],multipl:[40,41,917,918,919,1036,1090,1112,1154,1156,1245,1247,1248,1249,1250,1251,1253,1280,1281,1299,1309,1325],multipli:[40,41,1036,1056,1245,1250],multiprocess:[40,41,42,464,740,962,971,1036,1182],must:[40,41,42,43,875,876,877,878,879,880,885,886,887,888,889,890,891,892,893,895,896,898,899,901,902,904,905,907,908,909,913,914,915,916,917,918,919,921,939,940,946,962,991,992,993,994,1006,1036,1039,1051,1053,1055,1063,1092,1094,1105,1116,1164,1168,1171,1182,1238,1243,1315,1319],mutabl:[1226,1228,1235],mutlidevic:[962,971],mutlinod:1182,mw_tm1:[1131,1134,1138],mx_concat:1282,mxn:[875,879,904,905],mxnet:[43,1282,1328],my_func:43,mymodel:1282,name:[43,960,961,1324],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1325],nan:[40,41,43,874,885,886,887,889,890,891,892,893,894,898,901,902,917,918,919,1036,1077,1127],nativ:[15,17,18,19,40,41,43,962,978,980,989,990,1001,1008,1011,1012,1017,1024,1025,1182,1282,1283,1288,1289],native_modul:[1288,1289],native_module_class:[1288,1289],nativearrai:[15,18,19,43,875,878,879,881,882,883,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,904,906,907,908,909,910,911,913,914,915,916,917,918,919,921,939,940,946,962,980,1006,1007,1012,1016,1022,1027,1028,1036,1037,1038,1039,1041,1042,1043,1044,1046,1048,1049,1050,1051,1052,1054,1055,1056,1057,1060,1061,1062,1063,1065,1066,1067,1068,1070,1071,1075,1077,1078,1079,1086,1087,1088,1089,1091,1092,1093,1094,1097,1098,1101,1102,1103,1104,1105,1110,1112,1113,1116,1118,1119,1121,1122,1123,1124,1126,1127,1128,1129,1130,1182,1226,1228,1235],natur:[885,897,1164,1174,1328],ncdhw:[1263,1268,1269,1299,1304,1305],nchw:[1263,1266,1267,1270,1299,1302,1303,1306],ncw:[1263,1264,1265,1299,1300,1301],ndarrai:[43,405,406,407,408,409,410,411,413,414,512,1036,1122],ndhwc:[1263,1268,1269,1299,1304,1305],nearest:[885,892,1036,1103],need:[43,1036,1049,1050,1263,1265,1267,1269,1282,1299,1301,1303,1305,1328],neg:[40,41,88,228,416,548,685,885,892,893,904,907,908,909,917,918,919,1245,1250,1252,1255,1257],negative_slop:1290,neither:[885,892,1182],nest:[15,16,17,18,19,40,41,42,962,984,988,994,1036,1042,1121,1178,1179,1180,1182,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1311,1312,1315,1316,1317,1318,1319,1320],nested_indices_wher:1226,nested_map:[1182,1226],network:[1263,1272,1282,1283,1285,1299,1311,1312,1328],neural:[1263,1282,1285,1299,1324],never:43,new_node_percent_mem:1182,new_node_util:1182,new_node_utils_kei:1182,new_std:[1280,1281,1313,1314],newli:[43,960,961,1036,1046,1047],newlin:[40,41,42],newshap:[1036,1046,1102],next:[881,882,1182,1311,1312,1315,1316,1317,1318,1319,1320],nhwc:[1263,1266,1267,1270,1299,1302,1303,1306],node:[40,41,1226,1227,1234],node_clon:1182,node_dist:1182,node_dist_arrai:1182,node_dist_it:1182,node_in:1182,node_mapp:1182,node_str:1182,node_to_str:1182,node_util:1182,nodedistit:1182,nodedistitem:1182,nodedistnest:1182,nodemanag:[1182,1193],nodemapp:1182,nodemappermultiproc:1182,noinspect:[43,963,1013,1014,1015,1132,1182],non:[40,41,885,899,904,907,917,918,919,960,961,1012,1026,1311,1312,1315,1319,1325],none:[40,41,42,43,59,61,64,405,406,407,408,410,462,464,465,467,469,476,477,478,479,486,487,488,489,490,491,492,493,495,505,506,512,513,875,876,877,878,880,881,882,883,904,907,908,909,910,911,915,916,917,918,919,960,961,962,971,972,978,979,1004,1005,1006,1007,1012,1019,1020,1021,1036,1039,1042,1058,1059,1064,1069,1070,1071,1076,1078,1080,1081,1082,1083,1084,1088,1089,1095,1097,1098,1101,1104,1105,1106,1107,1112,1113,1114,1115,1124,1125,1130,1131,1134,1136,1138,1139,1140,1146,1147,1151,1154,1157,1159,1178,1179,1180,1181,1182,1226,1227,1230,1234,1235,1238,1239,1240,1241,1242,1245,1247,1248,1249,1250,1251,1252,1253,1263,1265,1267,1269,1272,1273,1274,1275,1280,1281,1288,1289,1290,1299,1300,1301,1302,1303,1304,1305,1306,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322],nonzero:[885,892],nor:[885,892],norm:[40,41,904,907,1036,1049,1050,1154,1157,1281,1282,1314,1315,1317],normal:[1238,1241,1280,1281,1313,1314],normalized_idx:[1280,1281],normalized_shap:[1313,1314],notat:[40,41,1245,1246],note:[43,1154,1159],noth:[40,41,1325],notimplementederror:1182,now:[40,41,43,962,1007,1036,1037,1182,1282,1299,1310,1311,1312,1324,1325,1328],np_concat:1282,np_finfo:411,ns_tune_step:1182,num:[464,486,487,1036,1088,1089],num_arrai:[40,41],num_arrays_in_memori:1036,num_arrays_on_dev:962,num_band:[1036,1068],num_channel:[1299,1306],num_chunk:1182,num_chunks_floor:1182,num_class:[1238,1239],num_cpu_cor:962,num_gpu:[134,462,962,1182],num_head:[1263,1274,1299,1310],num_kei:[1263,1274,1275],num_lay:[1299,1308],num_or_size_split:[40,41,464,491,1036,1112],num_output:1182,num_queri:[1263,1274,1275],num_sampl:[464,485,512,513,1036,1087,1147,1148,1238,1239],num_task:[1178,1179,1180,1181],number:[40,41,42,874,881,882,883,885,889,892,904,906,917,918,919,960,961,962,998,999,1000,1012,1023,1027,1028,1036,1039,1048,1052,1065,1068,1075,1078,1087,1088,1089,1092,1096,1101,1112,1119,1123,1127,1129,1178,1179,1180,1181,1182,1238,1239,1243,1245,1247,1248,1249,1251,1253,1263,1274,1299,1300,1301,1302,1303,1304,1305,1306,1308,1309,1310,1325,1328],numer:[43,885,889,892,893,894,895,899,900,921,940,946,1036,1073,1074,1106,1107,1114,1115,1164,1171,1290],numhead:[1263,1274],numpi:[40,41,43,405,406,407,408,409,410,411,413,414,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,904,906,1036,1122,1154,1159,1245,1246,1282,1324,1325,1328],nwc:[1263,1264,1265,1299,1300,1301],obj:[40,41],object:[40,41,42,59,411,881,882,962,1012,1016,1036,1039,1042,1131,1226,1229,1231,1232,1233,1236,1237,1238,1244,1290,1299,1300,1301,1302,1303,1304,1305,1306,1308,1309,1311,1312],object_in:[464,467,1036,1042],observ:1182,obvious:43,occupi:[881,882,883,1036,1104,1105],off:[904,905,1036,1039],offer:1282,offset:[904,905,1280,1281],often:1325,old:[40,41],on_init:[1299,1310,1311,1312],onc:[43,962,1006,1182,1238,1239,1282],one:[40,41,43,904,907,908,909,910,911,962,991,992,993,994,1006,1012,1018,1036,1078,1090,1097,1104,1105,1113,1116,1154,1157,1182,1245,1246,1247,1248,1249,1250,1251,1252,1253,1282,1325,1328],one_hot:[141,464,602,740,1036],onearrai:[1036,1065],ones:[40,41,77,217,405,537,674,875,878,1036,1078,1097,1282],ones_lik:[77,217,405,537,674,875],ongo:43,onli:[40,41,43,512,885,899,908,909,962,1154,1159,1182,1226,1227,1228,1234,1315,1316,1317,1318,1319,1320,1324,1325],onlin:[43,1282],onto:[962,991,992,1007,1182,1226,1230,1235],oom:[962,1182],open:[1036,1039,1238,1242,1282,1328],opencv:1325,oper:[40,41,885,892,1036,1045,1060,1061,1062,1088,1089,1117,1131,1134,1136,1138,1139,1140,1161,1162,1163,1263,1264,1265,1266,1267,1268,1269,1270,1272,1282,1283],operand:[40,41,885,886,887,889,890,891,892,898,901,902,1245,1246],oppos:[1036,1068],optim:[962,1131,1134,1136,1138,1139,1140,1178,1179,1180,1181,1182,1282,1316,1317,1318,1320,1324,1328],optimizer_upd:1131,option:[15,18,19,40,41,42,43,405,406,407,408,410,875,876,877,878,880,904,907,908,909,910,911,915,916,917,918,919,960,961,962,971,972,980,984,985,986,987,988,991,992,993,994,1001,1004,1005,1006,1007,1011,1012,1017,1022,1026,1035,1036,1038,1039,1041,1042,1049,1050,1051,1056,1058,1059,1068,1069,1070,1071,1075,1077,1078,1085,1087,1088,1089,1090,1093,1095,1097,1098,1101,1104,1105,1108,1110,1112,1113,1114,1115,1116,1124,1126,1127,1130,1131,1134,1136,1137,1138,1139,1140,1142,1147,1151,1154,1157,1159,1178,1179,1180,1181,1182,1226,1227,1228,1230,1234,1235,1238,1239,1245,1247,1248,1249,1250,1251,1252,1253,1255,1256,1260,1263,1271,1272,1274,1275,1276,1277,1278,1279,1280,1281,1288,1289,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1325],ord:[904,906,907],order:[40,41,42,43,904,907,908,909,913,914,1131,1134,1136,1138,1139,1140,1154,1157,1178,1179,1180,1321,1322],ordered_node_util_kei:1182,org:1328,organ:43,origin:[40,41,42,1036,1102,1130,1154,1157],other:[40,41,43,921,923,924,929,931,932,936,938,939,940,941,942,944,946,947,948,949,950,951,953,954,955,957,958,959,960,961,1036,1038,1039,1078,1131,1135,1238,1242,1282,1324,1325,1328],other_i:[43,921,940,946],otherwis:[15,16,17,18,19,40,41,885,893,894,904,907,910,911,917,918,919,962,979,1012,1019,1020,1021,1036,1045,1124,1125,1128,1131,1137,1142,1146,1178,1179,1180,1182,1245,1247,1248,1249,1251,1253],our:[43,1282,1328],out:[43,512,875,877,879,880,881,882,883,885,886,887,888,889,890,891,893,894,895,897,898,899,901,902,904,905,907,908,909,910,911,913,914,917,918,919,921,940,1036,1039,1164,1167,1263,1271,1273,1282,1299,1307],out_feat_dim:[1263,1274],out_featur:[1263,1271,1272],out_i:[885,893,894],outdat:1328,outer:[1178,1179,1180,1181],outer_batch_fn:[1178,1179,1180],outer_batch_shap:[1263,1272],outer_cost_fn:[1178,1179,1180],outer_v:[1178,1179,1180],outlin:1325,output:[40,41,43,875,876,877,878,880,908,909,962,971,972,1006,1036,1039,1047,1069,1078,1101,1119,1131,1135,1164,1168,1182,1238,1240,1241,1242,1263,1265,1267,1269,1271,1273,1274,1275,1282,1299,1300,1301,1302,1303,1304,1305,1307,1308,1309,1310],output_ax:[962,1006,1182],output_axi:1182,output_channel:[1299,1300,1301,1302,1303,1304,1305,1308,1309],output_queu:1182,output_shap:[1263,1265,1267,1269,1299,1301,1303,1305],outsid:[1036,1048],over:[40,41,904,907,917,918,919,1154,1157,1238,1242,1245,1247,1248,1249,1251,1253,1280,1281,1313,1314],overal:1325,overflow:[885,892,1036,1039],overhead:1325,overrid:[1036,1097,1130],overriden:[1315,1319],overwrit:[40,41,962,1006,1182],overwrite_at_key_chain:[40,41],own:[1282,1325,1328],packag:[43,1325],pad:[1036,1052,1068,1129,1263,1264,1265,1266,1267,1268,1269,1270,1299,1300,1301,1302,1303,1304,1305,1306],pad_width:[464,1036,1052,1129],page:1282,pair:[1263,1275],parallel:[962,971,972,1182],parallelis:[962,971,972,1182],param:[40,41,42,464,477,478,875,876,878,885,892,910,911,915,916,962,1006,1036,1037,1070,1071,1097,1098,1182,1311,1312,1324],paramet:[15,16,17,18,19,40,41,42,43,875,876,878,885,896,900,904,905,906,915,916,921,939,940,946,960,961,962,971,972,978,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,1001,1004,1005,1006,1007,1008,1011,1012,1016,1017,1018,1022,1023,1024,1025,1026,1027,1028,1035,1036,1038,1039,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1054,1055,1056,1057,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1075,1077,1078,1079,1081,1082,1083,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1098,1101,1102,1103,1104,1105,1106,1107,1108,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1133,1134,1135,1136,1137,1138,1139,1140,1142,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1288,1289,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1324],parameter:[1238,1241,1242],pardo:1282,pars:[1036,1053],part:[875,879,1131,1134,1136,1138,1139,1140,1164,1167,1282,1311,1312,1325],partial:[40,41,43,1311,1312],particl:1328,particular:[43,1328],pass:[40,41,42,43,962,971,1006,1012,1017,1036,1047,1131,1145,1178,1179,1180,1182,1288,1289,1311,1312,1315,1319,1321,1322],pattern:[40,41,1036,1060,1061,1062],peopl:43,per:[962,1182,1263,1264,1265,1266,1267,1268,1269,1270,1299,1300,1301,1302,1303,1304,1305,1306],percent_used_mem_on_dev:962,percent_used_mem_on_nod:1182,percentag:[962,1001,1182],perf_count:1182,perform:[40,41,43,917,918,919,962,1036,1041,1056,1060,1061,1062,1081,1082,1083,1087,1088,1089,1131,1134,1136,1138,1139,1140,1147,1148,1178,1179,1180,1181,1182,1226,1231,1232,1245,1247,1248,1249,1250,1251,1252,1253,1255,1260,1263,1271,1273],period:43,permissable_step:1182,permit:43,permut:[512,1036,1118,1124],perpendicular:[1036,1055],person:[43,1282],physci:1328,pickl:[40,41,1182],pickle_filepath:[40,41],pinv:[368,814,1154],pip:1282,pipelin:1324,pkk:1328,pkkm1:1328,pkm1km1:1328,place:[40,41,43,875,876,877,878,880,962,1007,1036,1065,1069,1081,1082,1083,1182,1315,1316,1317,1318,1319,1320],placehold:[43,1226,1235],pleas:[43,512,1154,1159],point:[43,874,875,876,877,880,881,882,885,886,887,889,890,891,892,898,901,902,904,907,1012,1027,1036,1039,1164,1171],popul:[40,41,1238,1239],popular:1328,population_s:[512,513,1238,1239],portabl:[1282,1283],posit:[15,16,17,881,882,885,892,893,917,918,919,962,984,988,994,1036,1037,1039,1065,1068,1182,1238,1243,1288,1289],possibi:[40,41],possibl:[43,1036,1090,1121,1147,1152,1328],post:[1280,1281],post_shap:[40,41],power:[43,921,946,952,1036,1073,1106,1115,1290],practic:1282,pre:[962,1182,1282],pre_shap:[40,41],precis:[881,882,885,902],pred:[1276,1277,1278,1279],predict:[1276,1277,1278,1279,1328],preprint:1282,present:[40,41],preserv:[40,41,42,908,909,1131,1142],preserve_typ:[40,41,496,499,1131,1142],press:1282,prevent:[43,1131,1133,1134,1138,1182,1315,1316,1317],prevet:43,previou:[1131,1134,1138],previous:[1036,1047],prime:1282,print:[40,41,42,962,1002,1036,1099,1282,1324],print_all_arrays_in_memori:1036,print_all_arrays_on_dev:962,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1315,1319],prob:[512,513,1238,1239,1263,1271,1299,1307],probabl:[1238,1239,1263,1271,1299,1307],problem:[43,1328],process:[43,962,971,972,1001,1011,1036,1095,1182],process_specif:[962,1001,1011,1182],prod:[40,41,1036,1061],produc:[962,971,972,1182],product:[40,41,1036,1055,1056,1091,1245,1246,1263,1274,1275,1299,1310],profil:[134,305,462,595,732,962,1182],progress:43,project:[1282,1324,1325,1328],promot:[43,885,886,887,888,890,891,892,898,901,902,904,907,921,946,1164,1171],prompt:1282,properli:43,properti:[40,41,411,962,974,1182,1311,1312,1315,1316,1317,1318,1320],provid:[40,41,43,908,909,910,911,917,918,919,960,961,962,979,1012,1019,1020,1021,1026,1035,1036,1059,1097,1105,1130,1131,1134,1136,1138,1139,1140,1146,1182,1282,1299,1308,1315,1316,1317,1318,1319,1320,1325],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1154,1158],pull:[1282,1283],pure:[40,41,1282,1328],purpos:[43,1328],put:1182,pybroadexcept:1182,pyprotectedmemb:1182,pyshadowingbuiltin:43,pyshadowingnam:[963,1013,1014,1015,1132,1182],python:[40,41,962,1001,1011,1036,1039,1182,1282],pytorch:[1131,1134,1136,1138,1139,1140,1154,1159,1282,1315,1316,1317,1318,1319,1320,1324,1325,1328],pyunresolvedrefer:1182,quadrant:[1164,1168],qualiti:43,queri:[40,41,921,935,956,962,995,1005,1182,1263,1274,1275,1299,1310],query_dim:[1299,1310],query_kei:[40,41],queue:[40,41,42,962,971,972,1036,1100,1108,1182],queue_class:[962,971,972,1182],queue_load_s:[40,41,42],queue_timeout:[40,41,42,1036,1182],quick:[512,1282],quickli:[43,1324],quotient:[885,892],radian:[885,890,901,1164,1165,1166,1168,1176],rai:[1164,1165],rais:[40,41,43,917,918,919,921,946,1036,1045,1073,1106,1113,1115,1125,1182,1311,1312,1315,1319],ram:[962,1001,1008,1011,1182],randint:[185,377,512,652,837,1238],random:[37,40,41,513,1239,1240,1241,1242,1243,1244,1282],random_crop:1147,random_norm:[185,377,512,652,837,1238],random_uniform:[185,377,512,652,837,1238],randomli:[512,1147,1151,1263,1271,1299,1307],rang:[512,1036,1039,1088,1089,1164,1168,1182,1282,1324,1328],rank:[904,907,917,918,919,1036,1052,1126,1129],rate:[1131,1134,1136,1138,1139,1140,1178,1179,1180,1181,1299,1310,1315,1316,1317,1318,1319,1320],rather:[40,41,43,962,1006,1036,1039,1085,1131,1137,1182],ratio:[962,1131,1138,1147,1152,1182,1315,1317],raw:[40,41,1154,1159],raw_delta:1182,reach:[43,962,984,988,994,1182,1226,1235],read:[40,41],readi:[1182,1324],real:[1164,1165,1167],realiti:1325,rearrang:[40,41,1036,1060,1062],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1178,1180],receiv:[43,962,971,972,1036,1040,1090,1182,1299,1309],receivess:[962,1182],receivng:[1178,1181],recev:[1178,1179,1180],recognit:1328,recommend:[885,899,1282],rectifi:[1255,1257,1258],recurr:[1263,1273],recurrent_bia:[1263,1273],recurrent_kernel:[1263,1273],recurs:[40,41,1226,1227,1228,1234,1235],redefin:43,reduc:[40,41,910,911,917,918,919,962,1006,1036,1061,1154,1159,1182,1245,1247,1248,1249,1250,1251,1252,1253],reduce_max:[40,41,192,382,514,657,844,1245],reduce_mean:[40,41,192,382,514,657,844,1245,1282,1324],reduce_min:[40,41,192,382,514,657,844,1245],reduce_prod:[40,41,192,382,514,657,844,1245],reduce_std:[40,41,382,1245],reduce_sum:[40,41,192,382,514,657,844,1182,1245],reduce_var:[40,41,192,382,514,657,844,1245],reduct:[39,40,41,464,489,490,917,918,919,1036,1061,1104,1105,1246,1247,1248,1249,1250,1251,1252,1253,1282],refactor:43,refer:[43,885,897,917,918,919,1131,1133,1134,1154,1160,1299,1309,1328],reflect:43,reflected_oper:[0,13,14],regard:[962,1182],regardless:[40,41,960,961],register_paramet:1324,reimplement:1328,rel:[904,905,908,909,913,914,1131,1134,1136,1138,1139,1140],rel_slice_obj:1182,relat:43,relev:[1315,1316,1317,1318,1319,1320],relu:[853,1255,1256,1257,1282,1324],remain:[43,1036,1102,1226,1230],remaind:[40,41,1036,1067,1112],remov:[40,41,43,904,905,910,911,1036,1113,1178,1179,1180],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,908,909],rep:[1036,1119],repeat:[40,41,43,311,740,1036,1062,1119,1182,1325],repeated_config_check:[962,1182],repeatedli:[1226,1233],repetit:[40,41,1036,1101,1119],replac:[40,41,43,512,513,1036,1048,1104,1105,1238,1239],repo:[43,1282],repositori:43,repres:[43,885,886,887,891,892,1012,1018,1023,1263,1272],represent:[40,41,42,43,874,881,882,883,885,888,892,962,989,990,1012,1018,1024,1025,1036,1111,1121,1182],reptil:[1178,1181],reptile_step:1178,request:[1282,1283],requir:[43,885,902,960,961,1012,1016,1036,1039,1042,1288,1289],resampl:[1036,1087],reserv:43,reshap:[40,41,43,512,740,1036],reshape_lik:[40,41],respect:[885,888,892,895,896,921,940,1036,1063,1131,1133,1134,1135,1136,1138,1139,1140,1154,1159,1164,1171,1178,1179,1180,1181],respond:43,respons:[43,1182],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,904,905,907,910,911,917,918,919,921,939,940,946,962,971,1036,1039,1063,1104,1105,1116,1154,1157,1161,1162,1163,1164,1171,1182,1245,1247,1248,1249,1250,1251,1252,1253,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1282],ret:1182,ret_dict:1182,ret_fn:[962,971,972,1182],retain:[1131,1135],retain_grad:[496,497,1131,1135],retreiv:1182,retrn:[1036,1111],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1178,1179,1180,1181],return_sequ:[1299,1308],return_st:[1299,1308],rev:[1036,1059],revers:[40,41,908,909,1036,1059,1124],review:43,right:[40,41,43],rk_e:1328,robot:1282,ronald:1282,root:[43,885,902],round:[311,464,740,885,889,892,902,1036,1039,1182],row:[1036,1078,1238,1239],rule:[43,885,892,921,946,1036,1039,1164,1171],run:[43,962,971,1131,1133,1134,1138,1178,1179,1180,1181,1182,1282,1283,1299,1310,1311,1312],safe:[962,971,1182],safety_factor:[962,1182],same:[15,16,17,40,41,43,875,878,879,885,889,892,904,905,906,908,909,910,911,913,914,962,971,972,1006,1007,1012,1016,1036,1037,1051,1066,1067,1070,1071,1097,1103,1104,1105,1116,1130,1131,1137,1142,1164,1167,1178,1179,1180,1182,1245,1246,1263,1264,1265,1266,1267,1268,1269,1270,1282,1299,1300,1301,1302,1303,1304,1305,1306,1324,1328],same_arrai:[40,41],sampl:[1036,1087,1147,1148,1238,1239,1241,1242,1263,1271,1282,1299,1307],satisfi:[1036,1042,1154,1156,1160],save:[40,41,1036,1109,1120,1147,1149,1311,1312],save_dir:[462,463,962,977,1182],save_weight:[1311,1312],scalar:[904,907,1036,1048,1097,1123,1127],scale:[962,1004,1005,1131,1139,1182,1263,1271,1274,1275,1280,1281,1299,1307,1310,1315,1318],scaled_dot_product_attent:1263,scatter:[1036,1097,1104,1105],scatter_flat:[141,311,464,602,740,1036],scatter_nd:[141,311,464,602,740,1036],scene:[1131,1134,1136,1138,1139,1140],schemat:1282,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[910,911],second:[40,41,885,888,895,896,904,905,962,993,1036,1043,1055,1063,1100,1108,1118,1131,1133,1134,1138,1178,1180,1182,1315,1316,1317],secondli:1328,sector:[885,886,887],see:[43,59,411,462,463,512,885,888,892,895,904,907,917,918,919,921,939,940,946,962,974,975,976,977,1012,1036,1039,1088,1089,1131,1164,1171,1282,1290,1292,1293,1295,1296,1298],seed:[40,41,185,512,837,1238],seed_valu:[40,41,512,1238,1243],seem:1282,seen_set:[1036,1076],select:[1036,1042,1113,1325,1328],self:[40,41,43,59,411,462,463,921,940,946,962,974,975,976,977,1012,1131,1182,1282,1290,1292,1293,1295,1296,1298,1315,1319,1324,1328],self_i:[921,940],sent:1182,seper:[43,1036,1068],seq:[40,41,42,1245,1246,1311,1312],sequenc:[15,16,17,40,41,42,43,512,960,961,962,971,972,981,982,983,984,985,986,987,988,991,992,1006,1012,1016,1036,1039,1042,1044,1046,1051,1052,1078,1090,1093,1098,1101,1102,1105,1112,1116,1119,1124,1129,1131,1135,1147,1151,1152,1154,1157,1182,1226,1237,1238,1240,1242,1245,1247,1248,1249,1250,1251,1252,1253,1263,1264,1265,1266,1267,1268,1269,1270,1280,1281,1288,1289,1299,1300,1301,1302,1303,1304,1305,1306,1308,1311,1312,1313,1314,1315,1319,1321,1322],sequenti:1282,seri:43,set:[15,18,19,40,41,910,911,913,914,962,991,992,1004,1005,1006,1036,1038,1058,1078,1106,1107,1108,1109,1131,1134,1136,1137,1138,1139,1140,1154,1157,1182,1226,1227,1234,1236,1237,1238,1239,1243,1245,1247,1248,1249,1250,1251,1252,1253,1282,1299,1308,1315,1316,1317,1318,1319,1320,1325,1328],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:962,set_default_dtyp:1012,set_default_float_dtyp:1012,set_default_int_dtyp:1012,set_default_nod:1182,set_exception_debug_mod:44,set_framework:[40,41,43,59,1182,1282,1324,1325,1328],set_ivy_backend:[40,41],set_min_bas:1036,set_min_denomin:1036,set_nest_at_index:1226,set_nest_at_indic:1226,set_queue_timeout:1036,set_split_factor:[962,1182],set_stat:[1315,1316,1317,1318,1319,1320],set_tmp_dir:1036,set_with_grad:1131,setter:1182,sever:1328,sgd:[1282,1315],shape0:1182,shape:[40,41,43,405,406,407,410,464,476,490,512,740,875,876,877,878,879,880,904,905,908,909,910,911,913,914,962,974,1012,1016,1036,1037,1046,1051,1052,1065,1066,1067,1069,1071,1075,1078,1097,1098,1101,1102,1103,1104,1105,1111,1113,1116,1129,1130,1147,1151,1154,1156,1159,1164,1167,1168,1182,1238,1240,1241,1242,1245,1246,1263,1265,1267,1269,1299,1301,1302,1303,1304,1305,1306,1313,1314],shape_slic:[40,41],shape_to_tupl:1036,share:[40,41,1282,1325],shift:1182,should:[40,41,42,43,512,875,879,885,886,887,888,889,890,891,892,893,894,895,898,899,901,902,904,905,907,910,911,921,939,940,946,960,961,962,1036,1046,1047,1053,1097,1102,1131,1134,1136,1138,1139,1140,1164,1171,1182,1245,1246,1282],show:[40,41,1282,1328],show_mod_in_top_mod:[1311,1312],show_structur:[1311,1312],show_sub_contain:[40,41],show_v:[1311,1312],show_v_in_top_v:[1311,1312],shown:[40,41],shp:1182,shuffl:[40,41,185,512,837,1238],shuffle_h5_fil:[40,41],side:43,sigmoid:[853,1255,1282,1324],sign:[885,892],signatur:[43,59,411,462,463,464,496,501,505,509,510,512,962,974,975,976,977,1012,1131,1290,1292,1293,1295,1296,1298],signific:1328,similar:[43,1263,1274,1299,1310],similarli:[1154,1159],simpl:[43,1036,1064,1282,1325,1328],simpler:43,simplest:1325,simpli:[40,41,43,1282,1325,1328],simultan:1282,sin:[88,228,416,548,685,885,1036,1068,1164,1176,1325],sinco:1325,sine:[885,887,901,1164,1166,1175],singl:[40,41,960,961,962,971,972,991,992,993,994,1036,1113,1123,1127,1147,1152,1182,1238,1241,1242,1245,1247,1248,1249,1250,1251,1252,1253,1282,1325,1328],singleton:[904,907,917,918,919],singular:[904,906],sinh:[824,1164],siren:[1282,1290],situat:43,size:[40,41,42,464,489,904,905,906,910,911,917,918,919,962,985,986,987,988,1004,1005,1006,1036,1039,1046,1088,1089,1104,1112,1147,1151,1154,1157,1182,1238,1239,1241,1242,1245,1247,1248,1249,1250,1251,1252,1253,1299,1300,1301],size_ordered_arrai:[40,41],skew:[1154,1160],skinv:1328,skip:[40,41],slice:[40,41,1036,1070,1071,1182,1226,1233],slice_kei:[40,41],slice_obj:[40,41,1182],slice_via_kei:[40,41],slide:[1263,1264,1265,1266,1267,1268,1269,1270,1299,1300,1301,1302,1303,1304,1305,1306],slope:[1255,1257],small:[885,892,1276,1277,1278,1279,1280,1281,1282,1313,1314,1325],smaller:[1036,1048],smallest:[40,41,881,882,883,885,889,1036,1041],smallest_norm:[411,881,882],softmax:[201,523,853,1255,1263,1274,1275],softplu:[853,1255],solut:43,solv:1328,some:[40,41,43,1036,1039,1131,1133,1134,1136,1138,1139,1140,1145,1263,1271,1282,1299,1307,1325,1328],some_backend:43,some_namespac:43,someth:[43,1328],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,904,906,914,1182],sort_by_kei:[40,41],sorting_funct:[913,914],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,405,406,407,408,409,410,411,413,414,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,510,511,512,513,875,876,877,878,879,880,881,882,883,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,904,905,906,907,908,909,910,911,913,914,915,916,917,918,919,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,964,965,966,967,968,969,971,972,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1285,1286,1287,1288,1289,1290,1292,1293,1295,1296,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1326,1327,1328],space:[1036,1039,1068,1088,1089],spars:[1276,1279],sparse_cross_entropi:1276,spawn:[1036,1095],special:[43,885,886,887,889,890,891,892,898,901,902],specif:[40,41,43,885,899,962,1004,1036,1053,1060,1061,1062,1095,1178,1179,1180,1181,1182,1238,1244,1282,1311,1312,1324,1325],specifc:[1238,1239],specifi:[40,41,43,875,876,877,879,880,904,905,907,908,909,910,911,913,914,917,918,919,962,981,982,983,984,985,986,987,988,991,992,996,998,1002,1005,1006,1007,1012,1016,1018,1036,1039,1041,1042,1048,1051,1052,1069,1070,1071,1077,1088,1089,1116,1126,1129,1154,1157,1182,1226,1231,1232,1236,1237,1245,1246,1247,1248,1249,1250,1251,1252,1253],sphinx:43,split:[40,41,141,311,464,602,740,962,971,985,986,987,988,1004,1005,1006,1036,1090,1182],split_arg:1182,split_factor:[962,971,1182],split_func_cal:[962,1182],split_siz:1182,spread:[962,994,1182],sqrt:[88,228,416,548,685,885,904,907],squar:[885,902,1036,1078,1154,1156],squeez:[141,311,464,602,740,1036],stabil:[913,914,1036,1114,1115],stabl:[913,914,1036,1073,1074,1106,1107,1114,1115],stable_divid:1036,stable_pow:1036,stack:[40,41,311,740,875,879,904,905,1036,1147,1152,1226,1227,1234,1299,1308],stack_imag:[175,364,501,642,810,1147],stacked_dim_s:1182,stage:43,standard:[40,41,881,882,1238,1241,1245,1251,1280,1281,1282,1283,1313,1314],start:[40,41,43,462,463,464,465,486,487,512,962,977,1036,1039,1088,1089,1182,1282,1325],starting_index:[40,41],starting_split_factor:[962,1182],state:[1182,1263,1273,1282,1285,1286,1287,1288,1289,1290,1292,1293,1295,1296,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1324],statement:1325,static_argnam:[464,469,960,961],static_argnum:[464,469,960,961],statistical_funct:[915,916],std:[512,1238,1241],step:[40,41,464,465,962,1036,1039,1088,1089,1131,1133,1134,1136,1138,1139,1140,1178,1179,1180,1181,1182,1282,1315,1316,1317,1318,1319,1320,1324,1328],stephen:1282,stick:1282,still:[40,41,43],stochast:[1315,1320],stop:[40,41,462,463,464,465,486,487,962,977,1006,1036,1039,1088,1089,1131,1134,1136,1138,1139,1140,1142,1178,1179,1180,1181,1182,1315,1316,1317,1318,1319,1320],stop_gradi:[40,41,359,496,637,804,962,1006,1131,1134,1136,1138,1139,1140,1178,1179,1180,1181,1182,1315,1316,1317,1318,1319,1320],stopiter:1182,store:[40,41,1036,1068,1112,1131,1145,1311,1312],store_var:[1311,1312],str:[15,16,17,40,41,42,43,405,406,407,408,410,411,413,414,875,878,881,882,883,960,961,962,971,972,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,1006,1012,1017,1018,1023,1024,1025,1026,1027,1028,1035,1036,1042,1058,1060,1061,1062,1093,1095,1098,1104,1105,1154,1157,1159,1178,1179,1180,1181,1182,1226,1230,1245,1246,1288,1289,1299,1310,1311,1312],str_to_nod:1182,straight:1325,strength:[1282,1328],stride:[1263,1264,1265,1266,1267,1268,1269,1270,1299,1300,1301,1302,1303,1304,1305,1306],string:[40,41,43,962,978,980,989,990,995,1001,1007,1008,1011,1012,1016,1022,1024,1025,1026,1035,1036,1039,1042,1058,1078,1098,1130,1182,1263,1264,1265,1266,1267,1268,1269,1270,1299,1300,1301,1302,1303,1304,1305,1306,1311,1312],structur:[40,41,42,43,1036,1053],structural_diff:[40,41],style:43,sub:[40,41,43,904,905,962,985,986,991,992,993,994,1036,1112,1178,1179,1180,1181,1182],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1182,sub_mod:[1311,1312],sub_modul:[1321,1322],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1282,1283,1313,1314,1321,1322],subsequ:43,subset:43,substr:[40,41],suffici:[1154,1159],suggest:1282,suitabl:[1147,1152],sum:[40,41,464,489,490,904,907,962,991,992,993,994,1006,1036,1057,1061,1104,1105,1182,1245,1246,1252],summat:[40,41,1245,1246],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,109,110,111,113,115,118,120,122,123,135,136,137,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,176,177,178,180,181,182,186,187,188,189,190,191,193,194,195,196,197,198,199,202,204,205,207,208,209,210,211,212,213,218,219,220,221,222,224,225,226,229,230,231,232,233,234,235,236,237,238,239,242,243,244,246,248,251,254,255,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,306,307,308,309,310,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,360,361,362,363,365,366,367,369,370,371,372,374,375,378,379,380,381,383,384,385,386,387,388,389,390,393,395,396,397,398,399,400,401,406,407,408,409,410,412,413,414,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,437,438,439,441,443,446,448,450,451,463,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,497,498,499,500,502,503,504,506,507,508,511,513,515,516,517,518,519,520,521,524,525,527,528,529,530,531,532,533,538,539,540,541,542,544,545,546,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,569,570,571,573,575,578,580,582,583,591,596,597,598,599,600,601,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,638,639,640,641,643,644,645,647,648,649,653,654,655,656,658,659,660,661,662,663,664,668,669,670,675,676,677,678,679,681,682,683,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,706,707,708,710,712,715,717,719,720,728,733,734,735,736,737,738,739,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,805,806,807,808,809,811,812,813,815,816,817,818,819,820,822,823,825,826,827,828,829,830,831,832,833,834,835,836,838,839,840,841,842,843,845,846,847,848,849,850,851,854,855,856,857,858,859,860,862,863,865,866,867,868,869,870,871,876,877,878,879,880,882,883,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,904,905,906,907,909,911,914,916,918,919,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,961,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1162,1163,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1179,1180,1181,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1239,1240,1241,1242,1243,1244,1246,1247,1248,1249,1250,1251,1252,1253,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1277,1278,1279,1281,1282,1286,1287,1289,1291,1292,1293,1294,1295,1296,1297,1298,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1312,1314,1315,1316,1317,1318,1319,1320,1322,1323,1324,1325,1327,1328],supports_inplac:1036,suppos:1328,sure:43,svd:[108,241,436,568,705,904],swap:[40,41,1036,1118],swapax:[40,41,602,740,1036,1328],symmetr:[1154,1160],syntax:[462,464,496,501,505,509,510,512],tab:1282,take:[43,1036,1087],taken:[43,904,905,1245,1247,1248,1249,1251,1253],tan:[824,1164,1167],tangent:[1164,1167,1168,1169,1176,1177,1255,1262],tanh:[824,853,1164,1255],target:[40,41,962,978,981,982,983,984,985,986,987,988,991,992,993,994,1007,1182,1282],target_dict:[40,41],task:[43,1178,1179,1180,1181],team:[43,1328],templat:1282,temporari:[1036,1109,1120],tensor:[40,41,43,464,489,490,962,980,1012,1022,1036,1039,1041,1046,1088,1089,1092,1094,1097,1098,1102,1104,1105,1112,1130,1182,1238,1239,1240,1263,1271,1273,1282,1299,1307,1309,1315,1316,1317,1318,1319,1320,1324,1325],tensorflow:[43,1154,1159,1263,1265,1267,1269,1282,1299,1301,1303,1305,1325,1328],term:[40,41,43,1263,1273,1282,1299,1309],termcolor:[40,41,42],termin:[40,41,42,1182],test:[43,885,893,894,917,918,919,1012,1027,1028],test_array_api:43,tf_concat:1282,than:[40,41,43,881,882,885,886,889,892,898,902,904,907,908,909,962,1006,1036,1039,1048,1066,1085,1092,1113,1116,1131,1137,1182,1238,1242,1282,1325],thei:[40,41,43,1164,1168,1178,1179,1180,1238,1239,1282,1321,1322,1325],them:[1282,1328],themselv:[1226,1227],therefor:43,thi:[40,41,42,43,885,899,910,911,962,984,988,994,1001,1006,1011,1036,1039,1068,1100,1102,1108,1131,1134,1136,1137,1138,1139,1140,1145,1154,1157,1182,1226,1230,1235,1245,1247,1248,1249,1250,1251,1252,1253,1263,1272,1282,1311,1312,1315,1316,1317,1318,1319,1320,1324,1325,1328],thing:[43,1282],those:[40,41,43,904,906,1036,1048,1131,1145,1182],though:43,thought:43,threshold:[1036,1092,1094],through:[40,41,43],tick:43,tickbox:43,tile:[311,602,740,1036],time:[43,1036,1119,1131,1134,1138,1178,1179,1180,1181,1182,1238,1239,1263,1273,1299,1310,1311,1312,1328],timeout:[40,41,42,962,971,972,1036,1100,1108,1182],timestep:[1263,1273,1299,1308],titl:[43,1282],tmp_dir:1036,tmp_dr:[1036,1109],to_appli:[40,41],to_clon:[962,1182],to_dev:[40,41,134,305,462,595,732,962],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[962,1182],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1282],to_ivy_modul:[203,861,1282,1288],to_json:[40,41],to_kv_fn:[1263,1274],to_kv_v:[1263,1274],to_list:[40,41,464,740,1036],to_multi_dev:[40,41],to_mut:[1226,1228,1235],to_n:[15,40,41,1282],to_nod:1182,to_numpi:[40,41,464,740,1036,1282,1324],to_out_fn:[1263,1274],to_out_v:[1263,1274],to_q_fn:[1263,1274],to_q_v:[1263,1274],to_raw:[40,41],to_scalar:[464,740,1036],todo:[1182,1282,1283],togeth:[40,41,1321,1322],too:[885,892],tool:[1282,1325],top_mod:[1311,1312],topic:1328,torch:[43,960,961,1282,1324,1325,1328],torch_concat:1282,torchfcmodel:1324,total:[40,41,42,962,1008,1182],total_mem_on_dev:962,total_mem_on_nod:1182,tpu:[962,1009,1182],tpu_is_avail:[462,595,732,962,1182],trace:[40,41,1036,1085],track:[43,962,1182,1226,1235,1311,1312],track_submod_call_ord:[1311,1312],track_submod_ret:[1311,1312],trail:[1313,1314],train:[1131,1133,1134,1138,1282,1283],trainabl:[1131,1137,1282,1283,1288,1289,1311,1312,1321],trainer:1282,tran:1328,transform:[1263,1271,1272],transpos:[40,41,141,311,464,740,962,993,1036,1182,1263,1265,1267,1269,1299,1301,1303,1305],travers:[15,18,19,40,41,1226,1235],treat:[40,41,960,961],tri:[40,41],triangular:[875,879],trigonometr:[1164,1165,1167],tril:[77,217,405,537,674,875],trim_kei:[40,41],trust:[1131,1138,1315,1317],truth:[885,895,896,921,939,940,1036,1063,1161,1162,1163],try_else_non:1036,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[962,1182],tune_dev_alloc:962,tune_dev_split:962,tune_node_alloc:1182,tune_node_split:1182,tune_step:[962,1182],tupl:[15,16,17,18,19,40,41,43,405,406,407,410,875,876,877,880,904,906,907,908,909,915,916,917,918,919,960,961,1036,1052,1068,1069,1111,1129,1182,1226,1227,1228,1229,1231,1232,1233,1234,1235,1236,1237,1238,1240,1245,1247,1248,1249,1250,1251,1252,1253],tutori:43,two:[40,41,875,879,904,905,906,1036,1039,1043,1055,1091,1118,1154,1157],type:[15,18,40,41,42,43,59,413,414,462,463,875,876,877,878,879,880,882,883,885,886,887,888,889,890,891,892,893,894,895,896,898,899,901,902,904,905,907,908,909,913,914,917,918,919,921,939,940,946,962,974,975,976,977,989,990,994,1006,1012,1016,1017,1018,1022,1023,1024,1025,1026,1027,1028,1035,1036,1037,1039,1042,1051,1053,1063,1066,1067,1069,1078,1085,1097,1098,1103,1117,1127,1130,1131,1137,1142,1164,1171,1182,1282,1290,1292,1293,1295,1296,1298,1311,1312,1325],types_to_iteratively_nest:[40,41,42],uint8:[1147,1149,1153],uint8_img_to_float_img:1147,unabl:43,unchang:[15,16,17,18,19],uncom:43,under:[885,892],underli:[885,888],underwai:43,unecessari:43,unfairli:43,unif:1182,unifi:[40,41,962,991,992,993,994,1006,1182,1282],uniform:[40,41,1238,1239,1241,1242,1290,1292,1293,1296,1297],uniformli:[1238,1240,1242],unify_arrai:1182,unify_it:1182,unify_nest:1182,uniniti:[875,876],union:[15,18,19,40,41,43,405,406,407,408,410,411,413,414,875,876,877,878,879,880,881,882,883,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,904,906,907,908,909,910,911,913,914,915,916,917,918,919,921,939,940,946,960,961,962,980,985,986,987,988,1006,1007,1012,1016,1017,1018,1022,1023,1024,1025,1026,1027,1028,1035,1036,1037,1038,1039,1041,1042,1043,1044,1046,1048,1049,1050,1051,1052,1054,1055,1056,1057,1060,1061,1062,1063,1065,1066,1067,1068,1069,1070,1071,1075,1077,1078,1079,1086,1087,1088,1089,1091,1092,1093,1094,1097,1098,1101,1102,1103,1104,1105,1110,1111,1112,1113,1116,1118,1119,1121,1122,1123,1124,1126,1127,1128,1129,1130,1182,1226,1227,1228,1234,1235],uniqu:[962,971,972,1178,1179,1180,1181,1182,1226,1230],unique_kwarg:1182,unit:[43,962,1164,1165,1166,1182,1255,1256,1257,1258],unitari:[904,906],unless:[1036,1097,1130],unlik:[962,1182],unnorm:[1238,1239],unpack:[1036,1126],unrol:[1263,1273],unset:1325,unset_debug_mod:44,unset_default_devic:962,unset_default_dtyp:1012,unset_default_float_dtyp:1012,unset_default_int_dtyp:1012,unset_framework:[59,1325],unset_with_grad:1131,unstack:[40,41,141,311,464,602,740,1036],until:43,unus:[960,961],updat:[40,41,464,489,490,962,971,1036,1083,1104,1105,1131,1133,1134,1136,1138,1139,1140,1178,1179,1180,1182,1226,1231,1232,1236,1237,1263,1273,1282,1283,1288,1289,1315,1316,1317,1318,1319,1320,1325,1328],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1238,1242],upper_depth:[1311,1312],upstream:43,usabl:[1282,1328],usag:[962,1006,1182],use:[40,41,42,43,512,962,971,972,997,1009,1036,1101,1114,1115,1154,1159,1182,1263,1274,1280,1281,1282,1313,1314,1325,1328],used:[40,41,43,512,904,905,962,971,1001,1004,1005,1011,1012,1023,1036,1073,1074,1090,1104,1105,1106,1107,1130,1131,1138,1139,1154,1157,1178,1179,1180,1181,1182,1226,1235,1299,1310,1315,1317,1318,1324,1325],used_dev:[962,971],used_mem_on_dev:962,used_mem_on_nod:1182,used_node_str:1182,used_node_strs_dict:1182,useful:[40,41,962,1006,1182,1263,1272,1282,1325],user:[1282,1299,1310,1311,1312,1325,1328],uses:1282,using:[40,41,43,1131,1133,1134,1226,1229,1233,1245,1246,1263,1271,1275,1282,1299,1307,1324,1325,1328],util:[962,995,1182],utility_funct:[917,918,919],v_with_top_v_key_chain:[1311,1312],val:[40,41,464,481,482,483,921,956,1036,1081,1082,1083,1106,1107],valid:[917,918,919,1012,1017,1036,1114,1115,1263,1264,1265,1266,1267,1268,1269,1270,1299,1300,1301,1302,1303,1304,1305,1306],valid_dtyp:1012,valu:[40,41,464,885,889,892,895,896,904,906,907,910,911,913,914,915,916,921,939,940,962,974,1005,1006,1036,1037,1039,1041,1048,1049,1050,1052,1053,1059,1063,1068,1069,1070,1071,1086,1088,1089,1092,1094,1100,1101,1102,1103,1104,1105,1106,1107,1108,1124,1127,1128,1129,1131,1135,1138,1147,1153,1161,1162,1163,1164,1172,1173,1174,1178,1179,1180,1182,1226,1230,1231,1232,1236,1237,1238,1241,1242,1245,1247,1249,1263,1274,1275,1280,1281,1299,1310,1313,1314,1315,1317],value_is_nan:1036,vanilla:[1178,1180],var_shap:1290,variabl:[15,16,17,18,19,40,41,359,496,637,804,1036,1045,1081,1082,1083,1084,1085,1117,1131,1134,1135,1136,1137,1138,1139,1140,1142,1145,1178,1179,1180,1181,1263,1274,1280,1281,1288,1289,1290,1299,1300,1301,1302,1303,1304,1305,1306,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322],variable_data:[496,804,1131],varianc:[40,41,1245,1253,1328],varieti:1325,variou:[43,1282],vector:[40,41,505,508,904,906,907,1036,1050,1055,1154,1160,1263,1272,1299,1309],vector_norm:[40,41,108,241,436,568,705,904],vector_to_skew_symmetric_matrix:[179,368,505,646,814,1154],verbos:1327,veri:[43,1282],verifi:43,version:43,via:[1226,1227,1234,1325],view:[1147,1152],vision:1282,visual:1325,volum:[1263,1268],vw_tm1:[1131,1134,1138],wai:[1325,1328],wait:[40,41,42,43],want:[43,1282,1325,1328],warn:[59,66,67,68,69,70],warp:[501,502,1147,1148],watch:1324,websit:43,weight:[1131,1133,1134,1136,1138,1139,1140,1263,1272,1273,1299,1300,1301,1302,1303,1304,1305,1306,1308,1309,1311,1312,1315,1317,1318],weight_initi:[1299,1300,1301,1302,1303,1304,1305,1306,1308,1309],weights_path:[1311,1312],well:[40,41,1036,1077],were:[40,41,1182],what:[43,1282],when:[40,41,42,43,904,906,962,1036,1047,1115,1128,1182,1282,1311,1312,1325,1328],where:[40,41,43,311,464,740,885,897,904,906,917,918,919,921,946,1036,1039,1046,1048,1052,1065,1079,1086,1097,1129,1226,1227,1234,1238,1239],wherea:43,wherebi:[1226,1235],whether:[15,18,19,40,41,42,885,894,917,918,919,960,961,962,980,993,997,1001,1006,1009,1011,1012,1022,1026,1027,1028,1035,1036,1038,1043,1044,1056,1059,1064,1068,1075,1077,1080,1084,1085,1090,1110,1117,1126,1127,1131,1134,1135,1136,1137,1138,1139,1140,1142,1178,1179,1180,1181,1182,1226,1227,1228,1230,1234,1235,1238,1239,1255,1256,1263,1271,1282,1288,1289,1299,1307,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1318,1319,1320],which:[40,41,42,43,512,875,876,877,878,879,880,881,882,883,904,905,907,908,909,910,911,913,914,915,916,917,918,919,960,961,962,971,972,980,985,986,987,988,991,992,993,994,996,998,1002,1004,1005,1006,1012,1017,1022,1026,1035,1036,1039,1042,1051,1053,1055,1056,1057,1059,1069,1070,1071,1072,1078,1079,1087,1088,1089,1096,1097,1098,1099,1101,1104,1105,1112,1116,1126,1128,1130,1131,1134,1135,1136,1138,1139,1140,1142,1144,1145,1147,1149,1154,1157,1164,1168,1182,1226,1230,1231,1232,1236,1237,1238,1239,1240,1241,1242,1245,1247,1248,1249,1250,1251,1252,1253,1255,1260,1263,1274,1275,1282,1288,1289,1299,1300,1301,1302,1303,1304,1305,1306,1308,1309,1310,1311,1312,1313,1314,1315,1316,1317,1319,1321,1322,1324,1325],whilst:43,whitespac:[40,41,42],who:43,whose:[43,875,879,885,886,887,890,891,901,904,905,908,909,921,939,946,1036,1042,1047,1245,1246,1247,1248,1249,1251,1253],why:[1282,1283],width:[1147,1152],wiki:1328,wikipedia:1328,window:[1147,1152,1263,1264,1265,1266,1267,1268,1269,1270,1299,1300,1301,1302,1303,1304,1305,1306],wise:[40,41,43,885,888,892,895,896,899,921,939,940,946,1036,1048,1063,1066,1067,1092,1094,1103,1131,1134,1136,1138,1140,1161,1162,1163,1164,1165,1166,1167,1168,1171,1172,1173,1174,1176,1255,1256,1257,1258,1259,1260,1261,1262],wish:1325,with_bia:[1299,1309],with_cal:[1036,1059],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1131,1141],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1182,with_partial_v:[1311,1312],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,464,491,1036,1112,1182],with_to_kv_fn:[1299,1310],with_to_out_fn:[1299,1310],with_to_q_fn:[1299,1310],within:[15,18,19,43,904,906,1036,1039,1238,1242],without:[40,41,43,1036,1100,1102,1108,1226,1228,1325],wonder:1282,word:[15,16,17,1036,1039,1238,1242,1288,1289],work:[43,1324],worker:[962,971,972,1182],worker_class:[962,971,972,1182],worker_kwarg:1182,would:[43,1255,1260,1282,1325,1328],wrap:[15,40,41,42,43,462,464,496,501,505,509,510,512,1036,1047,1131,1145,1282],wrapper:43,write:[40,41,43,1282,1283,1328],written:[43,1282,1328],ws_new:[1131,1134,1136,1138,1139,1140],x1_i:[885,888,892,895,896,1036,1063,1164,1171],x2_i:[885,888,892,895,896,1036,1063,1164,1171],x_feat_dim:[1263,1274],x_i:[885,886,887,889,890,891,893,894,898,899,901,902],x_in:[1282,1324],x_inv:[1154,1156],x_max:[464,1036,1048],x_min:[464,1036,1048],x_sub:1182,xkk:1328,xkkm1:1328,xkm1km1:1328,xs0:1182,xs_t:1182,year:[1282,1328],yet:[1226,1235,1328],yield:[1036,1128],you:[43,1282,1324,1325,1328],your:[1282,1283,1324,1325,1328],your_awesome_project:1325,yourself:[43,1282],yourslef:43,youtub:43,zero:[40,41,77,217,405,537,674,875,876,879,885,892,899,904,907,917,918,919,1036,1052,1097,1104,1105,1129,1130,1131,1133,1134,1138,1139,1263,1271,1282,1290,1299,1300,1301,1302,1303,1304,1305,1306,1307,1309,1315,1316,1317,1318],zero_pad:[311,464,602,740,1036],zeros_lik:[141,311,464,602,740,1036],zip:1182,zk_e:1328},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","divide","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","bitwise_and","ceil","divide","isfinite","isnan","less","logical_not","negative","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","divide","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","divide","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","divide","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","erf","exp","log","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","acosh","asinh","bitwise_and","ceil","cos","cosh","divide","isfinite","isnan","less","less_equal","log1p","log2","logical_not","negative","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1059,"function":[77,83,88,107,112,114,116,117,119,121,217,223,228,240,245,247,249,250,252,253,405,411,416,435,440,442,444,445,447,449,537,543,548,567,572,574,576,577,579,581,674,680,685,704,709,711,713,714,716,718,875,881,885,903,908,910,912,913,915,917],Ones:1295,Using:1325,abs:[312,603,741,1037],aco:[825,1165],acosh:[89,229,417,549,686,886],activ:[201,392,523,666,853,1255,1285],adam:1316,adam_step:1133,adam_upd:1134,algebra:[108,179,241,368,436,505,568,646,705,814,904],all:[122,254,450,582,719,918],all_equ:1038,all_nested_indic:1227,ani:[123,255,451,583,720,919],api:[0,43,75,125,215,257,403,453,535,585,672,722,873],arang:[142,313,465,604,742,1039],arg_nam:1040,argmax:[115,248,443,575,712,911],argmin:[143,466,605,743,1041],args_to_ivi:16,args_to_n:17,argsort:[118,251,446,578,715,914],arithmet:[1,126,258,454,586,723],arrai:[0,3,43,75,124,125,127,144,215,256,257,259,266,314,403,452,453,455,467,535,584,585,587,606,672,721,722,724,744,873,921,1042],array_equ:[315,745,1043],arrays_equ:1044,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[826,1166],asinh:[90,418,550,687,887],assert_supports_inplac:1045,atan2:[828,1168],atan:[827,1167],atanh:[829,1169],attribut:[5,128,260,456,588,725],backend:[43,73],bilinear_resampl:[176,365,502,643,811,1148],binary_cross_entropi:1277,bitwis:[7,129,261,457,589,726],bitwise_and:[91,230,419,551,688,888],broadcast_to:[316,746,1046],builder:51,builtin:[124,256,266,452,584,721,921],builtin_ab:[267,922],builtin_add:[268,923],builtin_and:[269,924],builtin_bool:[270,925],builtin_contain:[271,926],builtin_deepcopi:[272,927],builtin_dir:[273,928],builtin_eq:[274,929],builtin_float:[275,930],builtin_floordiv:[276,931],builtin_g:[277,932],builtin_getattr:[278,933],builtin_getattribut:[279,934],builtin_getitem:[280,935],builtin_gt:[281,936],builtin_int:[282,937],builtin_invert:[283,938],builtin_l:[284,939],builtin_lt:[285,591,728,940],builtin_mul:[286,941],builtin_n:[287,942],builtin_neg:[288,943],builtin_or:[289,944],builtin_po:[290,945],builtin_pow:[291,946],builtin_radd:[292,947],builtin_rand:[293,948],builtin_rfloordiv:[294,949],builtin_rmul:[295,950],builtin_ror:[296,951],builtin_rpow:[297,952],builtin_rsub:[298,953],builtin_rtruediv:[299,954],builtin_rxor:[300,955],builtin_setitem:[301,956],builtin_sub:[302,957],builtin_truediv:[303,958],builtin_xor:[304,959],cache_fn:1047,cast:[145,317,468,607,747,1016],ceil:[92,231,420,552,689,889],choleski:[815,1155],choose_random_framework:61,citat:1282,clear_framework_stack:62,clear_mem_on_dev:[734,978],clip:[318,748,1048],clip_matrix_norm:1049,clip_vector_norm:1050,clone:1197,clone_arrai:1198,clone_it:1199,clone_nest:1200,clonedit:1184,cloneditem:1183,clonednest:1185,closest_valid_dtyp:1017,code:1328,comparison:[9,130,262,458,590,727],compil:[319,469,749,960,961],concaten:[146,320,470,608,750,1051],constant:[76,216,404,536,673,874],constant_pad:[321,609,751,1052],contain:[40,41],container_typ:[752,1053],content:1282,contribut:43,conv1d:[207,395,527,865,1264,1300],conv1d_transpos:[208,396,528,866,1265],conv1dtranspos:1301,conv2d:[209,397,529,668,867,1266,1302],conv2d_transpos:[210,398,530,868,1267],conv2dtranspos:1303,conv3d:[211,399,531,669,869,1268,1304],conv3d_transpos:[212,400,532,870,1269],conv3dtranspos:1305,convers:15,convert:[203,861,1288],convert_dtyp:1018,copy_arrai:[753,1054],copy_nest:1228,core:[133,265,461,594,731,920],cos:[93,421,553,690,890],cosh:[94,422,554,691,830,891,1170],cprint:1327,creat:43,creation:[77,217,405,537,674,875],cross:[322,754,1055],cross_entropi:1278,cumprod:[147,323,471,755,1056],cumsum:[756,1057],current_framework:63,current_framework_str:[757,1058],data:[83,87,223,227,411,415,543,547,680,684,881,884],debug_mod:45,debugg:44,default_devic:979,default_dtyp:1019,default_float_dtyp:1020,default_int_dtyp:1021,default_nod:1201,depthwise_conv2d:[213,401,533,670,871,1270],depthwiseconv2d:1306,design:43,dev:[136,307,597,735,980],dev_clon:981,dev_clone_arrai:982,dev_clone_it:983,dev_clone_nest:984,dev_dist:985,dev_dist_arrai:986,dev_dist_it:987,dev_dist_nest:988,dev_from_str:[137,308,598,736,989],dev_to_str:[138,309,599,737,990],dev_unifi:991,dev_unify_arrai:992,dev_unify_it:993,dev_unify_nest:994,dev_util:995,devclonedit:965,devcloneditem:964,devclonednest:966,devdistit:968,devdistitem:967,devdistnest:969,devic:[20,134,305,462,595,732,962],devmapp:971,devmappermultiproc:972,diagon:[109,242,437,569,706,905],distribute_nest:1202,divid:[95,232,423,555,692,892,1171],document:1282,dropout:[1271,1307],dtype:[148,324,472,610,758,1012,1022],dtype_bit:[149,325,473,611,759,1023],dtype_from_str:[150,326,474,612,760,1024],dtype_to_str:[151,327,475,613,761,1025],ecosystem:52,einops_rearrang:1060,einops_reduc:1061,einops_repeat:1062,einsum:[193,383,515,658,845,1246],elementwis:[88,228,416,548,685,885],empti:[78,218,406,538,675,876],equal:[96,424,556,693,1063],erf:[511,831,1172],execute_with_gradi:[173,360,497,638,805,1135],exist:1064,exp:[832,1173],expand_dim:[328,762,1065],finfo:[85,225,413,545,682,882],firstlayersiren:1292,flip:[113,246,441,573,710,909],float_img_to_uint8_img:1149,floor:[329,763,1066],floormod:[330,764,1067],fomaml_step:1179,fork:43,fourier_encod:1068,framework:59,full:[152,331,476,614,765,1069],func:72,gather:[153,332,477,615,766,1070],gather_nd:[154,333,478,616,767,1071],geglu:1286,gelu:[393,524,854,1256,1287],gener:[22,141,311,464,602,740,1036],get_all_arrays_in_memori:1072,get_all_arrays_on_dev:996,get_framework:64,get_min_bas:1073,get_min_denomin:1074,get_num_dim:[768,1075],get_referrers_recurs:1076,glorotuniform:1293,gpu_is_avail:[997,1203],gradient:[24,172,359,496,637,804,1131],gradient_descent_upd:1136,gradient_imag:[177,366,503,644,812,1150],gym:53,handler:59,has_nan:1077,ident:[155,334,479,617,769,1078],iinfo:[86,226,414,546,683,883],imag:[26,175,364,501,642,810,1147],index_nest:1229,indices_wher:[156,335,480,770,1079],initi:1290,inplac:[11,131,263,459,592,729],inplace_arrays_support:1080,inplace_decr:[157,336,481,618,771,1081],inplace_incr:[158,337,482,619,772,1082],inplace_upd:[159,338,483,620,773,1083],inplace_variables_support:1084,inv:[816,1156],invalid_dtyp:1026,is_arrai:[160,339,484,621,774,1085],is_float_dtyp:1027,is_int_dtyp:1028,is_vari:[174,361,498,639,806,1137],isfinit:[97,233,425,557,694,893],isinf:[340,622,775,1086],isnan:[98,234,426,558,695,894],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,872,1324,1325,1328],ivymodul:[204,862],jax:74,keep:43,lamb:1317,lamb_upd:1138,lar:1318,lars_upd:1139,layer:[206,394,526,667,864,1263,1299],layer_norm:1281,layernorm:1314,leaky_relu:[855,1257],less:[99,235,427,559,696,895],less_equ:[100,428,560,697,896],linalg:[28,1154],linear:[108,179,241,368,436,505,568,646,705,814,904,1272,1309],linear_resampl:[161,341,485,623,776,1087],linspac:[162,342,486,624,777,1088],list:43,log1p:[101,429,561,698,897],log2:[102,430,562,699,898],log:[833,1174],logic:[30,183,373,509,650,821,1161],logical_and:[374,822,1162],logical_not:[103,236,431,563,700,899],logical_or:[375,823,1163],logspac:[163,343,487,625,778,1089],loss:1276,lstm:1308,lstm_updat:1273,maml_step:1180,manipul:[112,245,440,572,709,908],map:1230,map_nest_at_index:1231,map_nest_at_indic:1232,match_kwarg:1090,math:[32,184,376,510,651,824,1164],matmul:[344,626,779,1091],matrix_norm:[180,369,506,647,817,1157],maximum:[780,1092],mech:54,memori:55,meshgrid:[345,781,1093],meta:[34,1178],method:[107,240,435,567,704,903],min:[120,448,580,717,916],minimum:[782,1094],model:56,modul:[1311,1312,1324],multi:1182,multi_head_attent:1274,multi_index_nest:1233,multidevcontain:42,multidevit:975,multidevitem:974,multidevnest:976,multiheadattent:1310,multinodeit:1188,multinodeitem:1187,multinodenest:1189,multinomi:[186,378,513,653,838,1239],multiprocess:[783,1095],mxnet:214,nativ:1324,neg:[104,237,432,564,701,900],nest:1226,nested_indices_wher:1234,nested_map:1235,network:1324,next:1282,node:[1182,1204],node_dist:1205,node_dist_arrai:1206,node_dist_it:1207,node_str:1208,node_to_str:1209,node_util:1210,nodedistit:1191,nodedistitem:1190,nodedistnest:1192,nodemapp:1194,nodemappermultiproc:1195,norm:[1280,1313],num_arrays_in_memori:1096,num_arrays_on_dev:998,num_cpu_cor:999,num_gpu:[139,1000,1211],numpi:402,nutshel:1282,one_hot:[164,488,627,784,1097],ones:[79,219,407,539,676,877,1098],ones_lik:[80,220,408,540,677,878],oper:[1,3,7,9,11,13,43,126,127,129,130,131,132,258,259,261,262,263,264,454,455,457,458,459,460,586,587,589,590,592,593,723,724,726,727,729,730],optim:[1315,1319],optimizer_upd:1140,overview:1282,percent_used_mem_on_dev:1001,percent_used_mem_on_nod:1212,pinv:[370,818,1158],portabl:1328,print_all_arrays_in_memori:1099,print_all_arrays_on_dev:1002,profil:[135,306,463,596,733,977,1196],pull:43,queue_timeout:1100,randint:[187,379,654,839,1240],random:[36,185,377,512,652,837,1238],random_crop:1151,random_norm:[188,380,655,840,1241],random_uniform:[189,381,656,841,1242],reduce_max:[194,384,516,659,846,1247],reduce_mean:[195,385,517,660,847,1248],reduce_min:[196,386,518,661,848,1249],reduce_prod:[197,387,519,662,849,1250],reduce_std:[388,1251],reduce_sum:[198,389,520,663,850,1252],reduce_var:[199,390,521,664,851,1253],reduct:[38,192,382,514,657,844,1245],reflect:[13,132,264,460,593,730],relu:[856,1258],repeat:[346,785,1101],reptile_step:1181,request:43,reshap:[786,1102],robot:57,round:[347,787,1103],run:1325,scaled_dot_product_attent:1275,scatter_flat:[165,348,489,628,788,1104],scatter_nd:[166,349,490,629,789,1105],search:[114,247,442,574,711,910],seed:[190,842,1243],sequenti:[1321,1322],set:[116,249,444,576,713,912],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:1003,set_default_dtyp:1029,set_default_float_dtyp:1030,set_default_int_dtyp:1031,set_default_nod:1213,set_exception_debug_mod:48,set_framework:65,set_min_bas:1106,set_min_denomin:1107,set_nest_at_index:1236,set_nest_at_indic:1237,set_queue_timeout:1108,set_split_factor:[1004,1214],set_tmp_dir:1109,set_with_grad:1141,sgd:1320,shape:[790,1110],shape_to_tupl:1111,shuffl:[191,843,1244],sigmoid:[857,1259],signatur:[107,240,435,567,704,903],sin:[105,238,433,565,702,901],sinh:[834,1175],siren:1296,softmax:[202,525,858,1260],softplu:[859,1261],sort:[117,250,445,577,714,913],sparse_cross_entropi:1279,split:[167,350,491,630,791,1112],split_factor:[1005,1215],split_func_cal:[1006,1216],sqrt:[106,239,434,566,703,902],squeez:[168,351,492,631,792,1113],stable_divid:1114,stable_pow:1115,stack:[352,793,1116],stack_imag:[178,367,504,645,813,1152],standard:43,statist:[119,252,447,579,716,915],stop_gradi:[362,499,640,807,1142],str_to_nod:1217,submodul:43,supports_inplac:1117,svd:[110,243,438,570,707,906],swapax:[632,794,1118],tan:[835,1176],tanh:[836,860,1177,1262],tensorflow:534,tile:[353,633,795,1119],tmp_dir:1120,to_dev:[140,310,600,738,1007],to_ivi:18,to_ivy_modul:[205,863,1289],to_list:[796,1121],to_n:19,to_nod:1218,to_numpi:[797,1122],to_scalar:[798,1123],todo:43,torch:671,total_mem_on_dev:1008,total_mem_on_nod:1219,tpu_is_avail:[601,739,1009,1220],train:1324,trainabl:1324,transpos:[169,354,493,799,1124],tree:1282,tril:[81,221,409,541,678,879],try_else_non:1125,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[83,87,223,227,411,415,543,547,680,684,881,884],uint8_img_to_float_img:1153,unifi:1221,unify_arrai:1222,unify_it:1223,unify_nest:1224,unset_debug_mod:49,unset_default_devic:1010,unset_default_dtyp:1032,unset_default_float_dtyp:1033,unset_default_int_dtyp:1034,unset_framework:71,unset_with_grad:1143,unstack:[170,355,494,634,800,1126],updat:43,used_mem_on_dev:1011,used_mem_on_nod:1225,util:[121,253,449,581,718,917],valid_dtyp:1035,value_is_nan:1127,variabl:[363,500,641,808,1144],variable_data:[809,1145],vector_norm:[111,244,439,571,708,907],vector_to_skew_symmetric_matrix:[182,372,508,649,820,1160],verbos:1326,vision:58,where:[356,801,1128,1282],why:1328,with_grad:1146,wrapper:72,write:1325,your:43,zero:[82,222,410,542,679,880,1298],zero_pad:[357,635,802,1129],zeros_lik:[171,358,495,636,803,1130]}})